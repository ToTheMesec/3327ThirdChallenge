{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SaveChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SaveChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SaveChildrenV2.0\\\\client\\\\src\\\\App.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport Web3 from 'web3';\nimport './App.css';\nimport InputCampaign from './components/InputCampaign';\nimport ListCampaign from './components/ListCampaign';\n\nfunction App() {\n  var _this = this;\n\n  var loadWeb3 = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context.next = 6;\n                break;\n              }\n\n              window.web3 = new Web3(window.ethereum);\n              _context.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context.next = 7;\n              break;\n\n            case 6:\n              if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n              } else {\n                window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadWeb3() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var loadBlockchainData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var web3, accounts, networkId, networkData, abi, address, contract;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              web3 = window.web3; // Load account\n\n              _context3.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accounts = _context3.sent;\n\n              _this.setState({\n                account: accounts[0]\n              });\n\n              _context3.next = 7;\n              return web3.eth.net.getId();\n\n            case 7:\n              networkId = _context3.sent;\n              networkData = SupportChildren.networks[networkId];\n\n              if (networkData) {\n                abi = SupportChildren.abi;\n                address = networkData.address;\n                contract = new web3.eth.Contract(abi, address);\n                console.log(contract);\n              } else {\n                window.alert('Smart contract not deployed to detected network');\n              }\n\n              useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return loadWeb3();\n\n                      case 2:\n                        _context2.next = 4;\n                        return loadBlockchainData();\n\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              })));\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function loadBlockchainData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputCampaign, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ListCampaign, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Luka/Desktop/SaveChildrenV2.0/client/src/App.js"],"names":["React","Fragment","useState","useEffect","Web3","InputCampaign","ListCampaign","App","loadWeb3","window","ethereum","web3","enable","currentProvider","alert","loadBlockchainData","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","SupportChildren","networks","abi","address","contract","Contract","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAmD,OAAnD;;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;AAEA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAIb,MAAMC,QAAQ;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA,mBACZC,MAAM,CAACC,QADK;AAAA;AAAA;AAAA;;AAEbD,cAAAA,MAAM,CAACE,IAAP,GAAc,IAAIP,IAAJ,CAASK,MAAM,CAACC,QAAhB,CAAd;AAFa;AAAA,qBAGPD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAHO;;AAAA;AAAA;AAAA;;AAAA;AAIT,kBAAGH,MAAM,CAACE,IAAV,EAAe;AACnBF,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIP,IAAJ,CAASK,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,eAFK,MAED;AACHJ,gBAAAA,MAAM,CAACK,KAAP,CAAa,qEAAb;AACD;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARN,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAUA,MAAMO,kBAAkB;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBJ,cAAAA,IADmB,GACZF,MAAM,CAACE,IADK,EAEzB;;AAFyB;AAAA,qBAGFA,IAAI,CAACK,GAAL,CAASC,WAAT,EAHE;;AAAA;AAGnBC,cAAAA,QAHmB;;AAIzB,cAAA,KAAI,CAACC,QAAL,CAAc;AAACC,gBAAAA,OAAO,EAAEF,QAAQ,CAAC,CAAD;AAAlB,eAAd;;AAJyB;AAAA,qBAMDP,IAAI,CAACK,GAAL,CAASK,GAAT,CAAaC,KAAb,EANC;;AAAA;AAMnBC,cAAAA,SANmB;AAOnBC,cAAAA,WAPmB,GAOLC,eAAe,CAACC,QAAhB,CAAyBH,SAAzB,CAPK;;AAQzB,kBAAGC,WAAH,EAAgB;AACNG,gBAAAA,GADM,GACAF,eAAe,CAACE,GADhB;AAENC,gBAAAA,OAFM,GAEIJ,WAAW,CAACI,OAFhB;AAGNC,gBAAAA,QAHM,GAGK,IAAIlB,IAAI,CAACK,GAAL,CAASc,QAAb,CAAsBH,GAAtB,EAA2BC,OAA3B,CAHL;AAKZG,gBAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEH,eAPD,MAOO;AACHpB,gBAAAA,MAAM,CAACK,KAAP,CAAa,iDAAb;AACH;;AAEDX,cAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACFK,QAAQ,EADN;;AAAA;AAAA;AAAA,+BAEFO,kBAAkB,EAFhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAD,GAAT;;AAnByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAlBA,kBAAkB;AAAA;AAAA;AAAA,KAAxB;;AA0BA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD;;AAED,eAAeR,GAAf","sourcesContent":["import React, {Fragment, useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport Web3 from 'web3';\nimport './App.css';\n\nimport InputCampaign from './components/InputCampaign';\nimport ListCampaign from './components/ListCampaign';\n\nfunction App() {\n\n\n\n  const loadWeb3 = async() => {\n    if(window.ethereum){\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }else if(window.web3){\n      window.web3 = new Web3(window.web3.currentProvider)\n    }else{\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  };\n  const loadBlockchainData = async () => {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({account: accounts[0]})\n\n    const networkId = await web3.eth.net.getId()\n    const networkData = SupportChildren.networks[networkId]\n    if(networkData) {\n        const abi = SupportChildren.abi\n        const address = networkData.address\n        const contract = new web3.eth.Contract(abi, address)\n\n        console.log(contract)\n\n    } else {\n        window.alert('Smart contract not deployed to detected network')\n    }\n\n    useEffect(async () => {\n      await loadWeb3();\n      await loadBlockchainData();\n    })\n\n}\n\n  return (\n    <Fragment>\n      <div className = \"container\">\n        <InputCampaign/>\n        <ListCampaign/>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}