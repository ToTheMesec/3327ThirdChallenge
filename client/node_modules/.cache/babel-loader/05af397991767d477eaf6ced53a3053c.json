{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\src\\\\components\\\\L2View.js\";\nimport React, { Fragment, Component } from 'react';\nimport Web3 from 'web3';\nimport { MaticPOSClient } from '@maticnetwork/maticjs';\nimport WalletConnectProvider from \"@maticnetwork/walletconnect-provider\";\n\nvar MaticPoSClient = require(\"@maticnetwork/maticjs\").MaticPOSClient;\n\nvar Network = require(\"@maticnetwork/meta/network\");\n\nvar Matic = require(\"@maticnetwork/maticjs\");\n\nvar config = require(\"../config\");\n\nvar L2View = /*#__PURE__*/function (_Component) {\n  _inherits(L2View, _Component);\n\n  function L2View(props) {\n    var _this;\n\n    _classCallCheck(this, L2View);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(L2View).call(this, props));\n    _this.getMaticPlasmaParent = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _network,\n          _version,\n          network,\n          matic,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _network = _args.length > 0 && _args[0] !== undefined ? _args[0] : config.l2.NETWORK;\n              _version = _args.length > 1 && _args[1] !== undefined ? _args[1] : config.l2.VERSION;\n              network = new Network(_network, _version);\n              matic = new Matic({\n                network: _network,\n                version: _version,\n                parentProvider: window.web3,\n                maticProvider: _this.state.maticProvider,\n                parentDefaultOptions: {\n                  from: _this.state.account\n                },\n                maticDefaultOptions: {\n                  from: _this.state.account\n                }\n              });\n              _context.next = 6;\n              return matic.initialize();\n\n            case 6:\n              return _context.abrupt(\"return\", {\n                matic: matic,\n                network: network\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.getMaticPlasmaChild = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _network,\n          _version,\n          matic,\n          _args2 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _network = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : config.l2.NETWORK;\n              _version = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : config.l2.VERSION;\n              matic = new Matic({\n                network: _network,\n                version: _version,\n                parentProvider: _this.state.ethereumProvider,\n                maticProvider: window.web3,\n                parentDefaultOptions: {\n                  from: _this.state.account\n                },\n                maticDefaultOptions: {\n                  from: _this.state.account\n                }\n              });\n              _context2.next = 5;\n              return matic.initialize();\n\n            case 5:\n              return _context2.abrupt(\"return\", {\n                matic: matic\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.posClientParent = function () {\n      var maticPoSClient = new MaticPoSClient({\n        network: config.l2.NETWORK,\n        version: config.l2.VERSION,\n        maticProvider: _this.state.maticProvider,\n        parentProvider: window.web3,\n        parentDefaultOptions: {\n          from: _this.state.account\n        },\n        maticDefaultOptions: {\n          from: _this.state.account\n        }\n      });\n      return maticPoSClient;\n    };\n\n    _this.loadWeb3 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context3.next = 6;\n                break;\n              }\n\n              window.web3 = new Web3(window.ethereum);\n              _context3.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context3.next = 7;\n              break;\n\n            case 6:\n              if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n              } else {\n                window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n              }\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    _this.loadBlockchainData = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var maticProvider, ethereumProvider, web3, accounts, networkId;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this.setState({\n                loading: false\n              });\n\n              maticProvider = new WalletConnectProvider({\n                host: config.l2.MATIC_RPC,\n                callbacks: {\n                  onConnect: console.log(\"matic connected\"),\n                  onDisconnect: console.log(\"matic disconnected!\")\n                }\n              });\n              ethereumProvider = new WalletConnectProvider({\n                host: config.l2.ETHEREUM_RPC,\n                callbacks: {\n                  onConnect: console.log(\"mainchain connected\"),\n                  onDisconnect: console.log(\"mainchain disconnected\")\n                }\n              });\n\n              _this.setState({\n                maticProvider: maticProvider,\n                ethereumProvider: ethereumProvider\n              });\n\n              web3 = window.web3;\n              _context4.next = 7;\n              return web3.eth.getAccounts();\n\n            case 7:\n              accounts = _context4.sent;\n\n              _this.setState({\n                account: accounts[0]\n              });\n\n              _context4.next = 11;\n              return web3.eth.net.getId();\n\n            case 11:\n              networkId = _context4.sent;\n\n              _this.setState({\n                networkId: networkId\n              });\n\n              if (networkId === config.l2.ETHEREUM_CHAINID) {\n                _this.setState({\n                  loading: false\n                });\n              } else if (networkId === config.l2.MATIC_CHAINID) {\n                _this.setState({\n                  loading: false\n                });\n              } else {\n                window.alert(\" switch to  Matic or Ethereum network\");\n              }\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    _this.depositEther = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var maticPoSClient, x, x1;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              maticPoSClient = _this.posClientParent();\n              x = _this.state.inputValue * 1000000000000000000; // 18 decimals\n\n              x1 = x.toString();\n              _context5.next = 5;\n              return maticPoSClient.depositEtherForUser(_this.state.account, x1, {\n                from: _this.state.account\n              });\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    _this.burnEther = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var maticPoSClient, x, x1;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              maticPoSClient = _this.posClientParent();\n              x = _this.state.inputValue * 1000000000000000000;\n              x1 = x.toString();\n              _context6.next = 5;\n              return maticPoSClient.burnERC20(config.l2.posWETH, x1, {\n                from: _this.state.account\n              }).then(function (res) {\n                console.log(res.transactionHash);\n\n                _this.setState({\n                  transactionHash: res.transactionHash\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    _this.exitEther = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var maticPoSClient;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              maticPoSClient = _this.posClientParent();\n              _context7.next = 3;\n              return maticPoSClient.exitERC20(_this.state.inputValue, {\n                from: _this.state.account\n              }).then(function (res) {\n                console.log(\"exit o/p\", res);\n              });\n\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n    _this.depositERC20 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var maticPoSClient, x, x1;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              maticPoSClient = _this.posClientParent();\n              x = _this.state.inputValue * 1000000000000000000; // 18 decimals\n\n              x1 = x.toString();\n              _context8.next = 5;\n              return maticPoSClient.approveERC20ForDeposit(config.l2.posRootERC20, x1, {\n                from: _this.state.account\n              });\n\n            case 5:\n              _context8.next = 7;\n              return maticPoSClient.depositERC20ForUser(config.l2.posRootERC20, _this.state.account, x1, {\n                from: _this.state.account\n              });\n\n            case 7:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n    _this.burnERC20 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n      var maticPoSClient, x, x1;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              maticPoSClient = _this.posClientParent();\n              x = _this.state.inputValue * 1000000000000000000;\n              x1 = x.toString();\n              _context9.next = 5;\n              return maticPoSClient.burnERC20(config.l2.posChildERC20, x1, {\n                from: _this.state.account\n              }).then(function (res) {\n                _this.setState({\n                  transactionHash: res.transactionHash\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n    _this.exitERC20 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n      var maticPoSClient;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              maticPoSClient = _this.posClientParent();\n              _context10.next = 3;\n              return maticPoSClient.exitERC20(_this.state.inputValue, {\n                from: _this.state.account\n              }).then(function (res) {\n                console.log(\"exit o/p\", res);\n              });\n\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    _this.onchange = function (e) {\n      _this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    _this.depositEtherPlasma = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n      var _yield$_this$getMatic, matic, x, x1;\n\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return _this.getMaticPlasmaParent();\n\n            case 2:\n              _yield$_this$getMatic = _context11.sent;\n              matic = _yield$_this$getMatic.matic;\n              x = _this.state.inputValue * 1000000000000000000; // 18 decimals\n\n              x1 = x.toString();\n              _context11.next = 8;\n              return matic.depositEther(x1, {\n                from: _this.state.account\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 8:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n    _this.burnEtherPlasma = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n      var _yield$_this$getMatic2, matic, x, x1;\n\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return _this.getMaticPlasmaChild();\n\n            case 2:\n              _yield$_this$getMatic2 = _context12.sent;\n              matic = _yield$_this$getMatic2.matic;\n              x = _this.state.inputValue * 1000000000000000000; // 18 decimals\n\n              x1 = x.toString();\n              _context12.next = 8;\n              return matic.startWithdraw(config.l2.plasmaWETH, x1, {\n                from: _this.state.account\n              }).then(function (res) {\n                console.log(\"burn ether plasma txn hash\", res.transactionHash);\n              });\n\n            case 8:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n    _this.confirmWithdrawEtherPlasma = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n      var _yield$_this$getMatic3, matic;\n\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.next = 2;\n              return _this.getMaticPlasmaParent();\n\n            case 2:\n              _yield$_this$getMatic3 = _context13.sent;\n              matic = _yield$_this$getMatic3.matic;\n              _context13.next = 6;\n              return matic.withdraw(_this.state.inputValue, {\n                from: _this.state.account\n              }).then(function (res) {\n                console.log(\"Confirm withdraw hash: \", res.transactionHash);\n              });\n\n            case 6:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n    _this.exitEtherPlasma = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n      var _yield$_this$getMatic4, matic;\n\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.next = 2;\n              return _this.getMaticPlasmaParent();\n\n            case 2:\n              _yield$_this$getMatic4 = _context14.sent;\n              matic = _yield$_this$getMatic4.matic;\n              _context14.next = 6;\n              return matic.processExits(config.l2.rootChainWETH, {\n                from: _this.state.account\n              }).then(function (res) {\n                console.log(\"process exit\", res.transactionHash);\n              });\n\n            case 6:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14);\n    }));\n    _this.state = {\n      Networkid: 0,\n      account: \"\",\n      inputValue: \"\",\n      burnHash: \"\",\n      loading: true,\n      maticProvider: null,\n      ethereumProvider: null\n    };\n    return _this;\n  } // posClientGeneral facilitates the operations like approve, deposit, exit\n\n\n  _createClass(L2View, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context15.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"Ether\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.depositEther,\n        disabled: this.state.Networkid !== 0 && this.state.Networkid === config.l2.MATIC_CHAINID ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }\n      }, \"Deposit\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.burnEther,\n        disabled: this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }\n      }, \"burn\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.exitEther,\n        disabled: this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }\n      }, \"exit\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"inputValue\",\n        type: \"text\",\n        placeholder: \"value\",\n        name: \"inputValue\",\n        value: this.state.inputValue,\n        onChange: this.onchange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        id: \"burnHash\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }\n      }, this.state.burnHash), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }, \"PLASMA\"), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"plasma\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"PlasmaEther\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.depositEtherPlasma,\n        disabled: this.state.Networkid !== 0 && this.state.Networkid === config.l2.MATIC_CHAINID ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }\n      }, \"Deposit\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.burnEtherPlasma,\n        disabled: this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }\n      }, \"burn\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.confirmWithdrawEtherPlasma,\n        disabled: this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }\n      }, \"Confirm Withdraw\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.exitEtherPlasma,\n        disabled: this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }\n      }, \"exit\"))));\n    }\n  }]);\n\n  return L2View;\n}(Component);\n\nexport default L2View;","map":{"version":3,"sources":["C:/Users/Luka/Desktop/SupportChildrenV2.0/client/src/components/L2View.js"],"names":["React","Fragment","Component","Web3","MaticPOSClient","WalletConnectProvider","MaticPoSClient","require","Network","Matic","config","L2View","props","getMaticPlasmaParent","_network","l2","NETWORK","_version","VERSION","network","matic","version","parentProvider","window","web3","maticProvider","state","parentDefaultOptions","from","account","maticDefaultOptions","initialize","getMaticPlasmaChild","ethereumProvider","posClientParent","maticPoSClient","loadWeb3","ethereum","enable","currentProvider","alert","loadBlockchainData","setState","loading","host","MATIC_RPC","callbacks","onConnect","console","log","onDisconnect","ETHEREUM_RPC","eth","getAccounts","accounts","net","getId","networkId","ETHEREUM_CHAINID","MATIC_CHAINID","depositEther","x","inputValue","x1","toString","depositEtherForUser","burnEther","burnERC20","posWETH","then","res","transactionHash","exitEther","exitERC20","depositERC20","approveERC20ForDeposit","posRootERC20","depositERC20ForUser","posChildERC20","onchange","e","target","value","depositEtherPlasma","catch","err","burnEtherPlasma","startWithdraw","plasmaWETH","confirmWithdrawEtherPlasma","withdraw","exitEtherPlasma","processExits","rootChainWETH","Networkid","burnHash"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;;AAEA,IAAMC,cAAc,GAAGC,OAAO,CAAC,uBAAD,CAAP,CAAiCH,cAAxD;;AACA,IAAMI,OAAO,GAAGD,OAAO,CAAC,4BAAD,CAAvB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,uBAAD,CAArB;;AAGA,IAAMG,MAAM,GAAGH,OAAO,CAAC,WAAD,CAAtB;;IAGMI,M;;;AAEF,kBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,gFAAMA,KAAN;AADc,UAgBlBC,oBAhBkB,yEAgBK;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrBC,cAAAA,QADqB,2DACVJ,MAAM,CAACK,EAAP,CAAUC,OADA;AAErBC,cAAAA,QAFqB,2DAEVP,MAAM,CAACK,EAAP,CAAUG,OAFA;AAIfC,cAAAA,OAJe,GAIL,IAAIX,OAAJ,CAAYM,QAAZ,EAAsBG,QAAtB,CAJK;AAKfG,cAAAA,KALe,GAKP,IAAIX,KAAJ,CAAU;AACtBU,gBAAAA,OAAO,EAAEL,QADa;AAEtBO,gBAAAA,OAAO,EAAEJ,QAFa;AAGtBK,gBAAAA,cAAc,EAAEC,MAAM,CAACC,IAHD;AAItBC,gBAAAA,aAAa,EAAE,MAAKC,KAAL,CAAWD,aAJJ;AAKtBE,gBAAAA,oBAAoB,EAAE;AAAEC,kBAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AAAnB,iBALA;AAMtBC,gBAAAA,mBAAmB,EAAE;AAAEF,kBAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AAAnB;AANC,eAAV,CALO;AAAA;AAAA,qBAafT,KAAK,CAACW,UAAN,EAbe;;AAAA;AAAA,+CAcd;AAAEX,gBAAAA,KAAK,EAALA,KAAF;AAASD,gBAAAA,OAAO,EAAPA;AAAT,eAdc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAhBL;AAAA,UAiClBa,mBAjCkB,yEAiCI;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACpBlB,cAAAA,QADoB,8DACTJ,MAAM,CAACK,EAAP,CAAUC,OADD;AAEpBC,cAAAA,QAFoB,8DAETP,MAAM,CAACK,EAAP,CAAUG,OAFD;AAIdE,cAAAA,KAJc,GAIN,IAAIX,KAAJ,CAAU;AACtBU,gBAAAA,OAAO,EAAEL,QADa;AAEtBO,gBAAAA,OAAO,EAAEJ,QAFa;AAGtBK,gBAAAA,cAAc,EAAE,MAAKI,KAAL,CAAWO,gBAHL;AAItBR,gBAAAA,aAAa,EAAEF,MAAM,CAACC,IAJA;AAKtBG,gBAAAA,oBAAoB,EAAE;AAAEC,kBAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AAAnB,iBALA;AAMtBC,gBAAAA,mBAAmB,EAAE;AAAEF,kBAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AAAnB;AANC,eAAV,CAJM;AAAA;AAAA,qBAYdT,KAAK,CAACW,UAAN,EAZc;;AAAA;AAAA,gDAab;AAAEX,gBAAAA,KAAK,EAALA;AAAF,eAba;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAjCJ;;AAAA,UAiDlBc,eAjDkB,GAiDA,YAAM;AACpB,UAAMC,cAAc,GAAG,IAAI7B,cAAJ,CAAmB;AACxCa,QAAAA,OAAO,EAAET,MAAM,CAACK,EAAP,CAAUC,OADqB;AAExCK,QAAAA,OAAO,EAAEX,MAAM,CAACK,EAAP,CAAUG,OAFqB;AAGxCO,QAAAA,aAAa,EAAE,MAAKC,KAAL,CAAWD,aAHc;AAIxCH,QAAAA,cAAc,EAAEC,MAAM,CAACC,IAJiB;AAKxCG,QAAAA,oBAAoB,EAAE;AAAEC,UAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AAAnB,SALkB;AAMxCC,QAAAA,mBAAmB,EAAE;AAAEF,UAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AAAnB;AANmB,OAAnB,CAAvB;AAQA,aAAOM,cAAP;AACH,KA3DiB;;AAAA,UAkElBC,QAlEkB,yEAkEP;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHb,MAAM,CAACc,QADJ;AAAA;AAAA;AAAA;;AAELd,cAAAA,MAAM,CAACC,IAAP,GAAc,IAAIrB,IAAJ,CAASoB,MAAM,CAACc,QAAhB,CAAd;AAFK;AAAA,qBAGCd,MAAM,CAACc,QAAP,CAAgBC,MAAhB,EAHD;;AAAA;AAAA;AAAA;;AAAA;AAIA,kBAAIf,MAAM,CAACC,IAAX,EAAiB;AACtBD,gBAAAA,MAAM,CAACC,IAAP,GAAc,IAAIrB,IAAJ,CAASoB,MAAM,CAACC,IAAP,CAAYe,eAArB,CAAd;AACD,eAFM,MAEA;AACLhB,gBAAAA,MAAM,CAACiB,KAAP,CACE,qEADF;AAGD;;AAVM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlEO;AAAA,UA+ElBC,kBA/EkB,yEA+EG;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjB,oBAAKC,QAAL,CAAc;AACVC,gBAAAA,OAAO,EAAE;AADC,eAAd;;AAIMlB,cAAAA,aANW,GAMK,IAAIpB,qBAAJ,CAA0B;AAC9CuC,gBAAAA,IAAI,EAAElC,MAAM,CAACK,EAAP,CAAU8B,SAD8B;AAE9CC,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CADF;AAETC,kBAAAA,YAAY,EAAEF,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAFL;AAFmC,eAA1B,CANL;AAcXhB,cAAAA,gBAdW,GAcQ,IAAI5B,qBAAJ,CAA0B;AACjDuC,gBAAAA,IAAI,EAAElC,MAAM,CAACK,EAAP,CAAUoC,YADiC;AAEjDL,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAY,qBAAZ,CADF;AAETC,kBAAAA,YAAY,EAAEF,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAFL;AAFsC,eAA1B,CAdR;;AAsBjB,oBAAKP,QAAL,CAAc;AACVjB,gBAAAA,aAAa,EAAEA,aADL;AAEVQ,gBAAAA,gBAAgB,EAAEA;AAFR,eAAd;;AAKMT,cAAAA,IA3BW,GA2BJD,MAAM,CAACC,IA3BH;AAAA;AAAA,qBA6BMA,IAAI,CAAC4B,GAAL,CAASC,WAAT,EA7BN;;AAAA;AA6BXC,cAAAA,QA7BW;;AA8BjB,oBAAKZ,QAAL,CAAc;AAACb,gBAAAA,OAAO,EAAEyB,QAAQ,CAAC,CAAD;AAAlB,eAAd;;AA9BiB;AAAA,qBAgCO9B,IAAI,CAAC4B,GAAL,CAASG,GAAT,CAAaC,KAAb,EAhCP;;AAAA;AAgCXC,cAAAA,SAhCW;;AAiCjB,oBAAKf,QAAL,CAAc;AAACe,gBAAAA,SAAS,EAAEA;AAAZ,eAAd;;AAEA,kBAAIA,SAAS,KAAK/C,MAAM,CAACK,EAAP,CAAU2C,gBAA5B,EAA8C;AAC1C,sBAAKhB,QAAL,CAAc;AAACC,kBAAAA,OAAO,EAAE;AAAV,iBAAd;AACH,eAFD,MAEO,IAAIc,SAAS,KAAK/C,MAAM,CAACK,EAAP,CAAU4C,aAA5B,EAA2C;AAC9C,sBAAKjB,QAAL,CAAc;AAACC,kBAAAA,OAAO,EAAE;AAAV,iBAAd;AACH,eAFM,MAEA;AACLpB,gBAAAA,MAAM,CAACiB,KAAP,CAAa,uCAAb;AACD;;AAzCgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA/EH;AAAA,UA2HlBoB,YA3HkB,yEA2HH;AAAA;AAAA;AAAA;AAAA;AAAA;AACLzB,cAAAA,cADK,GACY,MAAKD,eAAL,EADZ;AAEL2B,cAAAA,CAFK,GAED,MAAKnC,KAAL,CAAWoC,UAAX,GAAwB,mBAFvB,EAE4C;;AACjDC,cAAAA,EAHK,GAGAF,CAAC,CAACG,QAAF,EAHA;AAAA;AAAA,qBAKL7B,cAAc,CAAC8B,mBAAf,CAAmC,MAAKvC,KAAL,CAAWG,OAA9C,EAAuDkC,EAAvD,EAA2D;AAC/DnC,gBAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AAD8C,eAA3D,CALK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA3HG;AAAA,UAqIlBqC,SArIkB,yEAqIN;AAAA;AAAA;AAAA;AAAA;AAAA;AACF/B,cAAAA,cADE,GACe,MAAKD,eAAL,EADf;AAEF2B,cAAAA,CAFE,GAEE,MAAKnC,KAAL,CAAWoC,UAAX,GAAwB,mBAF1B;AAGFC,cAAAA,EAHE,GAGGF,CAAC,CAACG,QAAF,EAHH;AAAA;AAAA,qBAIF7B,cAAc,CACjBgC,SADG,CACOzD,MAAM,CAACK,EAAP,CAAUqD,OADjB,EAC0BL,EAD1B,EAC8B;AAChCnC,gBAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AADe,eAD9B,EAIHwC,IAJG,CAIE,UAACC,GAAD,EAAS;AACbtB,gBAAAA,OAAO,CAACC,GAAR,CAAYqB,GAAG,CAACC,eAAhB;;AACA,sBAAK7B,QAAL,CAAc;AAAC6B,kBAAAA,eAAe,EAAED,GAAG,CAACC;AAAtB,iBAAd;AACD,eAPG,CAJE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KArIM;AAAA,UAmJlBC,SAnJkB,yEAmJN;AAAA;AAAA;AAAA;AAAA;AAAA;AACFrC,cAAAA,cADE,GACe,MAAKD,eAAL,EADf;AAAA;AAAA,qBAEFC,cAAc,CACjBsC,SADG,CACO,MAAK/C,KAAL,CAAWoC,UADlB,EAC8B;AAChClC,gBAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AADe,eAD9B,EAIHwC,IAJG,CAIE,UAACC,GAAD,EAAS;AACbtB,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBqB,GAAxB;AACD,eANG,CAFE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAnJM;AAAA,UAgKlBI,YAhKkB,yEAgKH;AAAA;AAAA;AAAA;AAAA;AAAA;AACLvC,cAAAA,cADK,GACY,MAAKD,eAAL,EADZ;AAEL2B,cAAAA,CAFK,GAED,MAAKnC,KAAL,CAAWoC,UAAX,GAAwB,mBAFvB,EAE4C;;AACjDC,cAAAA,EAHK,GAGAF,CAAC,CAACG,QAAF,EAHA;AAAA;AAAA,qBAIL7B,cAAc,CAACwC,sBAAf,CAAsCjE,MAAM,CAACK,EAAP,CAAU6D,YAAhD,EAA8Db,EAA9D,EAAkE;AACpEnC,gBAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AADmD,eAAlE,CAJK;;AAAA;AAAA;AAAA,qBAOLM,cAAc,CAAC0C,mBAAf,CAAmCnE,MAAM,CAACK,EAAP,CAAU6D,YAA7C,EAA2D,MAAKlD,KAAL,CAAWG,OAAtE,EAA+EkC,EAA/E,EAAmF;AACrFnC,gBAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AADoE,eAAnF,CAPK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAhKG;AAAA,UA4KlBsC,SA5KkB,yEA4KN;AAAA;AAAA;AAAA;AAAA;AAAA;AACFhC,cAAAA,cADE,GACe,MAAKD,eAAL,EADf;AAEF2B,cAAAA,CAFE,GAEE,MAAKnC,KAAL,CAAWoC,UAAX,GAAwB,mBAF1B;AAGFC,cAAAA,EAHE,GAGGF,CAAC,CAACG,QAAF,EAHH;AAAA;AAAA,qBAIF7B,cAAc,CACnBgC,SADK,CACKzD,MAAM,CAACK,EAAP,CAAU+D,aADf,EAC8Bf,EAD9B,EACkC;AACpCnC,gBAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AADmB,eADlC,EAILwC,IAJK,CAIA,UAACC,GAAD,EAAS;AACX,sBAAK5B,QAAL,CAAc;AAAC6B,kBAAAA,eAAe,EAAED,GAAG,CAACC;AAAtB,iBAAd;AACH,eANK,CAJE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5KM;AAAA,UAyLlBE,SAzLkB,yEAyLN;AAAA;AAAA;AAAA;AAAA;AAAA;AACFtC,cAAAA,cADE,GACe,MAAKD,eAAL,EADf;AAAA;AAAA,qBAEFC,cAAc,CACnBsC,SADK,CACK,MAAK/C,KAAL,CAAWoC,UADhB,EAC4B;AAC9BlC,gBAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AADa,eAD5B,EAILwC,IAJK,CAIA,UAACC,GAAD,EAAS;AACXtB,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBqB,GAAxB;AACH,eANK,CAFE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAzLM;;AAAA,UAoMlBS,QApMkB,GAoMP,UAACC,CAAD,EAAO;AACd,YAAKtC,QAAL,CAAc;AAACoB,QAAAA,UAAU,EAAEkB,CAAC,CAACC,MAAF,CAASC;AAAtB,OAAd;AACH,KAtMiB;;AAAA,UA0MlBC,kBA1MkB,yEA0MG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACK,MAAKtE,oBAAL,EADL;;AAAA;AAAA;AACXO,cAAAA,KADW,yBACXA,KADW;AAEbyC,cAAAA,CAFa,GAET,MAAKnC,KAAL,CAAWoC,UAAX,GAAwB,mBAFf,EAEoC;;AACjDC,cAAAA,EAHa,GAGRF,CAAC,CAACG,QAAF,EAHQ;AAAA;AAAA,qBAIb5C,KAAK,CACRwC,YADG,CACUG,EADV,EACc;AAChBnC,gBAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AADD,eADd,EAIHuD,KAJG,CAIG,UAACC,GAAD,EAAS;AACdrC,gBAAAA,OAAO,CAACC,GAAR,CAAYoC,GAAZ;AACD,eANG,CAJa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA1MH;AAAA,UAuNlBC,eAvNkB,yEAuNA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQ,MAAKtD,mBAAL,EADR;;AAAA;AAAA;AACRZ,cAAAA,KADQ,0BACRA,KADQ;AAEVyC,cAAAA,CAFU,GAEN,MAAKnC,KAAL,CAAWoC,UAAX,GAAwB,mBAFlB,EAEuC;;AACjDC,cAAAA,EAHU,GAGLF,CAAC,CAACG,QAAF,EAHK;AAAA;AAAA,qBAIV5C,KAAK,CACRmE,aADG,CACW7E,MAAM,CAACK,EAAP,CAAUyE,UADrB,EACiCzB,EADjC,EACqC;AACvCnC,gBAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AADsB,eADrC,EAIHwC,IAJG,CAIE,UAACC,GAAD,EAAS;AACbtB,gBAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CqB,GAAG,CAACC,eAA9C;AACD,eANG,CAJU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvNA;AAAA,UAoOlBkB,0BApOkB,yEAoOW;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACH,MAAK5E,oBAAL,EADG;;AAAA;AAAA;AACnBO,cAAAA,KADmB,0BACnBA,KADmB;AAAA;AAAA,qBAErBA,KAAK,CACRsE,QADG,CACM,MAAKhE,KAAL,CAAWoC,UADjB,EAC6B;AAAElC,gBAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AAAnB,eAD7B,EAEHwC,IAFG,CAEE,UAACC,GAAD,EAAS;AACbtB,gBAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCqB,GAAG,CAACC,eAA3C;AACD,eAJG,CAFqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KApOX;AAAA,UA6OlBoB,eA7OkB,yEA6OA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQ,MAAK9E,oBAAL,EADR;;AAAA;AAAA;AACRO,cAAAA,KADQ,0BACRA,KADQ;AAAA;AAAA,qBAEVA,KAAK,CACRwE,YADG,CACUlF,MAAM,CAACK,EAAP,CAAU8E,aADpB,EACmC;AACrCjE,gBAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AADoB,eADnC,EAIHwC,IAJG,CAIE,UAACC,GAAD,EAAS;AACbtB,gBAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BqB,GAAG,CAACC,eAAhC;AACD,eANG,CAFU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA7OA;AAEd,UAAK7C,KAAL,GAAa;AACToE,MAAAA,SAAS,EAAE,CADF;AAETjE,MAAAA,OAAO,EAAE,EAFA;AAGTiC,MAAAA,UAAU,EAAE,EAHH;AAITiC,MAAAA,QAAQ,EAAE,EAJD;AAKTpD,MAAAA,OAAO,EAAE,IALA;AAMTlB,MAAAA,aAAa,EAAE,IANN;AAOTQ,MAAAA,gBAAgB,EAAE;AAPT,KAAb;AAFc;AAYjB,G,CAED;;;;;;;;;;;;uBAgDU,KAAKG,QAAL,E;;;;uBACA,KAAKK,kBAAL,E;;;;;;;;;;;;;;;;;;6BA0LF;AACJ,0BACI;AACA,QAAA,EAAE,EAAC,OADH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGA;AACE,QAAA,OAAO,EAAE,KAAKmB,YADhB;AAEE,QAAA,QAAQ,EACN,KAAKlC,KAAL,CAAWoE,SAAX,KAAyB,CAAzB,IAA8B,KAAKpE,KAAL,CAAWoE,SAAX,KAAyBpF,MAAM,CAACK,EAAP,CAAU4C,aAAjE,GACI,IADJ,GAEI,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHA,eAcA;AACE,QAAA,OAAO,EAAE,KAAKO,SADhB;AAEE,QAAA,QAAQ,EACN,KAAKxC,KAAL,CAAWoE,SAAX,KAAyB,CAAzB,IAA8B,KAAKpE,KAAL,CAAWoE,SAAX,KAAyBpF,MAAM,CAACK,EAAP,CAAU2C,gBAAjE,GACI,IADJ,GAEI,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdA,eAyBA;AACE,QAAA,OAAO,EAAE,KAAKc,SADhB;AAEE,QAAA,QAAQ,EACN,KAAK9C,KAAL,CAAWoE,SAAX,KAAyB,CAAzB,IAA8B,KAAKpE,KAAL,CAAWoE,SAAX,KAAyBpF,MAAM,CAACK,EAAP,CAAU2C,gBAAjE,GACI,KADJ,GAEI,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBA,eAoCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApCA,eAqCA;AACE,QAAA,EAAE,EAAC,YADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,OAHd;AAIE,QAAA,IAAI,EAAC,YAJP;AAKE,QAAA,KAAK,EAAE,KAAKhC,KAAL,CAAWoC,UALpB;AAME,QAAA,QAAQ,EAAE,KAAKiB,QANjB;AAOE,QAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArCA,eA8CA;AAAG,QAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkB,KAAKrD,KAAL,CAAWqE,QAA7B,CA9CA,eA+CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/CA,eAgDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhDA,eAiDA;AACF,QAAA,EAAE,EAAC,QADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIF;AACE,QAAA,EAAE,EAAC,aADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE;AACE,QAAA,OAAO,EAAE,KAAKZ,kBADhB;AAEE,QAAA,QAAQ,EACN,KAAKzD,KAAL,CAAWoE,SAAX,KAAyB,CAAzB,IAA8B,KAAKpE,KAAL,CAAWoE,SAAX,KAAyBpF,MAAM,CAACK,EAAP,CAAU4C,aAAjE,GACI,IADJ,GAEI,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,eAeE;AACE,QAAA,OAAO,EAAE,KAAK2B,eADhB;AAEE,QAAA,QAAQ,EACN,KAAK5D,KAAL,CAAWoE,SAAX,KAAyB,CAAzB,IAA8B,KAAKpE,KAAL,CAAWoE,SAAX,KAAyBpF,MAAM,CAACK,EAAP,CAAU2C,gBAAjE,GACI,IADJ,GAEI,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,eAyBE;AACE,QAAA,OAAO,EAAE,KAAK+B,0BADhB;AAEE,QAAA,QAAQ,EACN,KAAK/D,KAAL,CAAWoE,SAAX,KAAyB,CAAzB,IAA8B,KAAKpE,KAAL,CAAWoE,SAAX,KAAyBpF,MAAM,CAACK,EAAP,CAAU2C,gBAAjE,GACI,KADJ,GAEI,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAzBF,eAoCE;AACE,QAAA,OAAO,EAAE,KAAKiC,eADhB;AAEE,QAAA,QAAQ,EACN,KAAKjE,KAAL,CAAWoE,SAAX,KAAyB,CAAzB,IAA8B,KAAKpE,KAAL,CAAWoE,SAAX,KAAyBpF,MAAM,CAACK,EAAP,CAAU2C,gBAAjE,GACI,KADJ,GAEI,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApCF,CAJE,CAjDA,CADJ;AAwGH;;;;EApWgBxD,S;;AAwWrB,eAAeS,MAAf","sourcesContent":["import React, {Fragment, Component} from 'react';\r\nimport Web3 from 'web3';\r\nimport { MaticPOSClient } from '@maticnetwork/maticjs'\r\nimport WalletConnectProvider from \"@maticnetwork/walletconnect-provider\";\r\n\r\nconst MaticPoSClient = require(\"@maticnetwork/maticjs\").MaticPOSClient;\r\nconst Network = require(\"@maticnetwork/meta/network\");\r\nconst Matic = require(\"@maticnetwork/maticjs\");\r\n\r\n\r\nconst config = require(\"../config\");\r\n\r\n\r\nclass L2View extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Networkid: 0,\r\n            account: \"\",\r\n            inputValue: \"\",\r\n            burnHash: \"\",\r\n            loading: true,\r\n            maticProvider: null,\r\n            ethereumProvider: null, \r\n\r\n        }\r\n    }\r\n\r\n    // posClientGeneral facilitates the operations like approve, deposit, exit\r\n\r\n    getMaticPlasmaParent = async (\r\n      _network = config.l2.NETWORK,\r\n      _version = config.l2.VERSION\r\n    ) => {\r\n      const network = new Network(_network, _version);\r\n      const matic = new Matic({\r\n        network: _network,\r\n        version: _version,\r\n        parentProvider: window.web3,\r\n        maticProvider: this.state.maticProvider,\r\n        parentDefaultOptions: { from: this.state.account },\r\n        maticDefaultOptions: { from: this.state.account },\r\n      });\r\n      await matic.initialize();\r\n      return { matic, network };\r\n    };\r\n\r\n    getMaticPlasmaChild = async (\r\n      _network = config.l2.NETWORK,\r\n      _version = config.l2.VERSION\r\n    ) => {\r\n      const matic = new Matic({\r\n        network: _network,\r\n        version: _version,\r\n        parentProvider: this.state.ethereumProvider,\r\n        maticProvider: window.web3,\r\n        parentDefaultOptions: { from: this.state.account },\r\n        maticDefaultOptions: { from: this.state.account },\r\n      });\r\n      await matic.initialize();\r\n      return { matic };\r\n    };\r\n\r\n    posClientParent = () => {\r\n        const maticPoSClient = new MaticPoSClient({\r\n          network: config.l2.NETWORK,\r\n          version: config.l2.VERSION,\r\n          maticProvider: this.state.maticProvider,\r\n          parentProvider: window.web3,\r\n          parentDefaultOptions: { from: this.state.account },\r\n          maticDefaultOptions: { from: this.state.account },\r\n        });\r\n        return maticPoSClient;\r\n    }\r\n\r\n    async componentWillMount() {\r\n        await this.loadWeb3();\r\n        await this.loadBlockchainData();\r\n    }\r\n\r\n    loadWeb3 = async () => {\r\n        if (window.ethereum) {\r\n          window.web3 = new Web3(window.ethereum);\r\n          await window.ethereum.enable();\r\n        } else if (window.web3) {\r\n          window.web3 = new Web3(window.web3.currentProvider);\r\n        } else {\r\n          window.alert(\r\n            \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n          );\r\n        }\r\n    }\r\n\r\n    loadBlockchainData = async () => {\r\n\r\n        this.setState({\r\n            loading: false\r\n        })\r\n\r\n        const maticProvider = new WalletConnectProvider({\r\n          host: config.l2.MATIC_RPC,\r\n          callbacks: {\r\n            onConnect: console.log(\"matic connected\"),\r\n            onDisconnect: console.log(\"matic disconnected!\"),\r\n          },\r\n        });\r\n    \r\n        const ethereumProvider = new WalletConnectProvider({\r\n          host: config.l2.ETHEREUM_RPC,\r\n          callbacks: {\r\n            onConnect: console.log(\"mainchain connected\"),\r\n            onDisconnect: console.log(\"mainchain disconnected\"),\r\n          },\r\n        });\r\n        \r\n        this.setState({\r\n            maticProvider: maticProvider,\r\n            ethereumProvider: ethereumProvider\r\n        })\r\n\r\n        const web3 = window.web3;\r\n    \r\n        const accounts = await web3.eth.getAccounts();\r\n        this.setState({account: accounts[0]});\r\n\r\n        const networkId = await web3.eth.net.getId();\r\n        this.setState({networkId: networkId});\r\n    \r\n        if (networkId === config.l2.ETHEREUM_CHAINID) {\r\n            this.setState({loading: false});\r\n        } else if (networkId === config.l2.MATIC_CHAINID) {\r\n            this.setState({loading: false});\r\n        } else {\r\n          window.alert(\" switch to  Matic or Ethereum network\");\r\n        }\r\n    }\r\n\r\n    depositEther = async () => {\r\n        const maticPoSClient = this.posClientParent();\r\n        const x = this.state.inputValue * 1000000000000000000; // 18 decimals\r\n        const x1 = x.toString();\r\n    \r\n        await maticPoSClient.depositEtherForUser(this.state.account, x1, {\r\n          from: this.state.account,\r\n        });\r\n    }\r\n\r\n    burnEther = async () => {\r\n        const maticPoSClient = this.posClientParent();\r\n        const x = this.state.inputValue * 1000000000000000000;\r\n        const x1 = x.toString();\r\n        await maticPoSClient\r\n          .burnERC20(config.l2.posWETH, x1, {\r\n            from: this.state.account,\r\n          })\r\n          .then((res) => {\r\n            console.log(res.transactionHash);\r\n            this.setState({transactionHash: res.transactionHash});\r\n          });\r\n    }\r\n\r\n    exitEther = async () => {\r\n        const maticPoSClient = this.posClientParent();\r\n        await maticPoSClient\r\n          .exitERC20(this.state.inputValue, {\r\n            from: this.state.account,\r\n          })\r\n          .then((res) => {\r\n            console.log(\"exit o/p\", res);\r\n          });\r\n    }\r\n\r\n    // POS ERC20 functionality\r\n\r\n    depositERC20 = async () => {\r\n        const maticPoSClient = this.posClientParent();\r\n        const x = this.state.inputValue * 1000000000000000000; // 18 decimals\r\n        const x1 = x.toString();\r\n        await maticPoSClient.approveERC20ForDeposit(config.l2.posRootERC20, x1, {\r\n            from: this.state.account,\r\n        });\r\n        await maticPoSClient.depositERC20ForUser(config.l2.posRootERC20, this.state.account, x1, {\r\n            from: this.state.account,\r\n        });\r\n    };\r\n\r\n    burnERC20 = async () => {\r\n        const maticPoSClient = this.posClientParent();\r\n        const x = this.state.inputValue * 1000000000000000000;\r\n        const x1 = x.toString();\r\n        await maticPoSClient\r\n        .burnERC20(config.l2.posChildERC20, x1, {\r\n            from: this.state.account,\r\n        })\r\n        .then((res) => {\r\n            this.setState({transactionHash: res.transactionHash});\r\n        });\r\n    }\r\n\r\n    exitERC20 = async () => {\r\n        const maticPoSClient = this.posClientParent();\r\n        await maticPoSClient\r\n        .exitERC20(this.state.inputValue, {\r\n            from: this.state.account,\r\n        })\r\n        .then((res) => {\r\n            console.log(\"exit o/p\", res);\r\n        });\r\n    }\r\n\r\n    onchange = (e) => {\r\n        this.setState({inputValue: e.target.value});\r\n    }\r\n\r\n    //PLASMA\r\n\r\n    depositEtherPlasma = async () => {\r\n      const { matic } = await this.getMaticPlasmaParent();\r\n      const x = this.state.inputValue * 1000000000000000000; // 18 decimals\r\n      const x1 = x.toString();\r\n      await matic\r\n        .depositEther(x1, {\r\n          from: this.state.account,\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n  \r\n    burnEtherPlasma = async () => {\r\n      const { matic } = await this.getMaticPlasmaChild();\r\n      const x = this.state.inputValue * 1000000000000000000; // 18 decimals\r\n      const x1 = x.toString();\r\n      await matic\r\n        .startWithdraw(config.l2.plasmaWETH, x1, {\r\n          from: this.state.account,\r\n        })\r\n        .then((res) => {\r\n          console.log(\"burn ether plasma txn hash\", res.transactionHash);\r\n        });\r\n    };\r\n  \r\n    confirmWithdrawEtherPlasma = async () => {\r\n      const { matic } = await this.getMaticPlasmaParent();\r\n      await matic\r\n        .withdraw(this.state.inputValue, { from: this.state.account})\r\n        .then((res) => {\r\n          console.log(\"Confirm withdraw hash: \", res.transactionHash);\r\n        });\r\n    }\r\n  \r\n    exitEtherPlasma = async () => {\r\n      const { matic } = await this.getMaticPlasmaParent();\r\n      await matic\r\n        .processExits(config.l2.rootChainWETH, {\r\n          from: this.state.account,\r\n        })\r\n        .then((res) => {\r\n          console.log(\"process exit\", res.transactionHash);\r\n        });\r\n    };\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div\r\n            id=\"Ether\"\r\n            >\r\n            <button\r\n              onClick={this.depositEther}\r\n              disabled={\r\n                this.state.Networkid !== 0 && this.state.Networkid === config.l2.MATIC_CHAINID\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              Deposit\r\n            </button>\r\n\r\n            <button\r\n              onClick={this.burnEther}\r\n              disabled={\r\n                this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              burn\r\n            </button>\r\n\r\n            <button\r\n              onClick={this.exitEther}\r\n              disabled={\r\n                this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID\r\n                  ? false\r\n                  : true\r\n              }\r\n            >\r\n              exit\r\n            </button>\r\n\r\n            <br />\r\n            <input\r\n              id=\"inputValue\"\r\n              type=\"text\"\r\n              placeholder=\"value\"\r\n              name=\"inputValue\"\r\n              value={this.state.inputValue}\r\n              onChange={this.onchange}\r\n              required\r\n            />\r\n            <p id=\"burnHash\">{this.state.burnHash}</p>\r\n            <br></br>\r\n            <h1>PLASMA</h1>\r\n            <div\r\n          id=\"plasma\"\r\n\r\n        >\r\n          <div\r\n            id=\"PlasmaEther\"\r\n            \r\n          >\r\n            <button\r\n              onClick={this.depositEtherPlasma}\r\n              disabled={\r\n                this.state.Networkid !== 0 && this.state.Networkid === config.l2.MATIC_CHAINID\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              Deposit\r\n            </button>\r\n\r\n            <button\r\n              onClick={this.burnEtherPlasma}\r\n              disabled={\r\n                this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              burn\r\n            </button>\r\n            <button\r\n              onClick={this.confirmWithdrawEtherPlasma}\r\n              disabled={\r\n                this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID\r\n                  ? false\r\n                  : true\r\n              }\r\n            >\r\n              Confirm Withdraw\r\n            </button>\r\n\r\n            <button\r\n              onClick={this.exitEtherPlasma}\r\n              disabled={\r\n                this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID\r\n                  ? false\r\n                  : true\r\n              }\r\n            >\r\n              exit\r\n            </button>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default L2View;"]},"metadata":{},"sourceType":"module"}