{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\src\\\\components\\\\L2View.js\";\nimport React, { Fragment, Component } from 'react';\nimport Web3 from 'web3';\nimport { MaticPOSClient } from '@maticnetwork/maticjs';\nimport WalletConnectProvider from \"@maticnetwork/walletconnect-provider\";\n\nvar MaticPoSClient = require(\"@maticnetwork/maticjs\").MaticPOSClient;\n\nvar Network = require(\"@maticnetwork/meta/network\");\n\nvar Matic = require(\"@maticnetwork/maticjs\");\n\nvar config = require(\"../config\");\n\nvar L2View = /*#__PURE__*/function (_Component) {\n  _inherits(L2View, _Component);\n\n  function L2View(props) {\n    var _this;\n\n    _classCallCheck(this, L2View);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(L2View).call(this, props));\n\n    _this.posClientParent = function () {\n      var maticPoSClient = new MaticPoSClient({\n        network: config.l2.NETWORK,\n        version: config.l2.VERSION,\n        maticProvider: _this.state.maticProvider,\n        parentProvider: window.web3,\n        parentDefaultOptions: {\n          from: _this.state.account\n        },\n        maticDefaultOptions: {\n          from: _this.state.account\n        }\n      });\n      return maticPoSClient;\n    };\n\n    _this.loadWeb3 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context.next = 6;\n                break;\n              }\n\n              window.web3 = new Web3(window.ethereum);\n              _context.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context.next = 7;\n              break;\n\n            case 6:\n              if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n              } else {\n                window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.loadBlockchainData = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var maticProvider, ethereumProvider, web3, accounts, networkId;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                loading: false\n              });\n\n              maticProvider = new WalletConnectProvider({\n                host: config.l2.MATIC_RPC,\n                callbacks: {\n                  onConnect: console.log(\"matic connected\"),\n                  onDisconnect: console.log(\"matic disconnected!\")\n                }\n              });\n              ethereumProvider = new WalletConnectProvider({\n                host: config.l2.ETHEREUM_RPC,\n                callbacks: {\n                  onConnect: console.log(\"mainchain connected\"),\n                  onDisconnect: console.log(\"mainchain disconnected\")\n                }\n              });\n\n              _this.setState({\n                maticProvider: maticProvider,\n                ethereumProvider: ethereumProvider\n              });\n\n              web3 = window.web3;\n              _context2.next = 7;\n              return web3.eth.getAccounts();\n\n            case 7:\n              accounts = _context2.sent;\n\n              _this.setState({\n                account: accounts[0]\n              });\n\n              _context2.next = 11;\n              return web3.eth.net.getId();\n\n            case 11:\n              networkId = _context2.sent;\n\n              _this.setState({\n                networkId: networkId\n              });\n\n              if (networkId === config.l2.ETHEREUM_CHAINID) {\n                _this.setState({\n                  loading: false\n                });\n              } else if (networkId === config.l2.MATIC_CHAINID) {\n                _this.setState({\n                  loading: false\n                });\n              } else {\n                window.alert(\" switch to  Matic or Ethereum network\");\n              }\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    _this.depositEther = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var maticPoSClient, x, x1;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              maticPoSClient = _this.posClientParent();\n              x = _this.state.inputValue * 1000000000000000000; // 18 decimals\n\n              x1 = x.toString();\n              _context3.next = 5;\n              return maticPoSClient.depositEtherForUser(_this.state.account, x1, {\n                from: _this.state.account\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    _this.burnEther = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var maticPoSClient, x, x1;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              maticPoSClient = posClientChild();\n              x = _this.state.inputValue * 1000000000000000000;\n              x1 = x.toString();\n              _context4.next = 5;\n              return maticPoSClient.burnERC20(config.l2.posWETH, x1, {\n                from: _this.state.account\n              }).then(function (res) {\n                console.log(res.transactionHash);\n\n                _this.setState({\n                  transactionHash: res.transactionHash\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    _this.exitEther = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var maticPoSClient;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              maticPoSClient = posClientParent();\n              _context5.next = 3;\n              return maticPoSClient.exitERC20(_this.state.inputValue, {\n                from: _this.state.account\n              }).then(function (res) {\n                console.log(\"exit o/p\", res);\n              });\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    _this.depositERC20 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var maticPoSClient, x, x1;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              maticPoSClient = posClientParent();\n              x = _this.state.inputValue * 1000000000000000000; // 18 decimals\n\n              x1 = x.toString();\n              _context6.next = 5;\n              return maticPoSClient.approveERC20ForDeposit(config.l2.posRootERC20, x1, {\n                from: _this.state.account\n              });\n\n            case 5:\n              _context6.next = 7;\n              return maticPoSClient.depositERC20ForUser(config.l2.posRootERC20, _this.state.account, x1, {\n                from: _this.state.account\n              });\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    _this.burnERC20 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var maticPoSClient, x, x1;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              maticPoSClient = posClientChild();\n              x = _this.state.inputValue * 1000000000000000000;\n              x1 = x.toString();\n              _context7.next = 5;\n              return maticPoSClient.burnERC20(config.l2.posChildERC20, x1, {\n                from: _this.state.account\n              }).then(function (res) {\n                _this.setState({\n                  transactionHash: res.transactionHash\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n    _this.exitERC20 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var maticPoSClient;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              maticPoSClient = posClientParent();\n              _context8.next = 3;\n              return maticPoSClient.exitERC20(_this.state.inputValue, {\n                from: _this.state.account\n              }).then(function (res) {\n                console.log(\"exit o/p\", res);\n              });\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    _this.onchange = function (e) {\n      _this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    _this.state = {\n      Networkid: 0,\n      account: \"\",\n      inputValue: \"\",\n      burnHash: \"\",\n      loading: true,\n      maticProvider: null,\n      ethereumProvider: null\n    };\n    return _this;\n  } // posClientGeneral facilitates the operations like approve, deposit, exit\n\n\n  _createClass(L2View, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context9.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"Ether\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.depositEther,\n        disabled: this.state.Networkid !== 0 && this.state.Networkid === config.l2.MATIC_CHAINID ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }, \"Deposit\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.burnEther,\n        disabled: this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }, \"burn\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.exitEther,\n        disabled: this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }\n      }, \"exit\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"inputValue\",\n        type: \"text\",\n        placeholder: \"value\",\n        name: \"inputValue\",\n        value: this.state.inputValue,\n        onChange: this.onchange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        id: \"burnHash\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }\n      }, this.state.burnHash));\n    }\n  }]);\n\n  return L2View;\n}(Component);\n\nexport default L2View;","map":{"version":3,"sources":["C:/Users/Luka/Desktop/SupportChildrenV2.0/client/src/components/L2View.js"],"names":["React","Fragment","Component","Web3","MaticPOSClient","WalletConnectProvider","MaticPoSClient","require","Network","Matic","config","L2View","props","posClientParent","maticPoSClient","network","l2","NETWORK","version","VERSION","maticProvider","state","parentProvider","window","web3","parentDefaultOptions","from","account","maticDefaultOptions","loadWeb3","ethereum","enable","currentProvider","alert","loadBlockchainData","setState","loading","host","MATIC_RPC","callbacks","onConnect","console","log","onDisconnect","ethereumProvider","ETHEREUM_RPC","eth","getAccounts","accounts","net","getId","networkId","ETHEREUM_CHAINID","MATIC_CHAINID","depositEther","x","inputValue","x1","toString","depositEtherForUser","burnEther","posClientChild","burnERC20","posWETH","then","res","transactionHash","exitEther","exitERC20","depositERC20","approveERC20ForDeposit","posRootERC20","depositERC20ForUser","posChildERC20","onchange","e","target","value","Networkid","burnHash"],"mappings":"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","sourcesContent":["import React, {Fragment, Component} from 'react';\r\nimport Web3 from 'web3';\r\nimport { MaticPOSClient } from '@maticnetwork/maticjs'\r\nimport WalletConnectProvider from \"@maticnetwork/walletconnect-provider\";\r\nconst MaticPoSClient = require(\"@maticnetwork/maticjs\").MaticPOSClient;\r\nconst Network = require(\"@maticnetwork/meta/network\");\r\nconst Matic = require(\"@maticnetwork/maticjs\");\r\n\r\nconst config = require(\"../config\");\r\n\r\n\r\nclass L2View extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Networkid: 0,\r\n            account: \"\",\r\n            inputValue: \"\",\r\n            burnHash: \"\",\r\n            loading: true,\r\n            maticProvider: null,\r\n            ethereumProvider: null, \r\n\r\n        }\r\n    }\r\n\r\n    // posClientGeneral facilitates the operations like approve, deposit, exit\r\n\r\n    posClientParent = () => {\r\n        const maticPoSClient = new MaticPoSClient({\r\n          network: config.l2.NETWORK,\r\n          version: config.l2.VERSION,\r\n          maticProvider: this.state.maticProvider,\r\n          parentProvider: window.web3,\r\n          parentDefaultOptions: { from: this.state.account },\r\n          maticDefaultOptions: { from: this.state.account },\r\n        });\r\n        return maticPoSClient;\r\n    }\r\n\r\n    async componentWillMount() {\r\n        await this.loadWeb3();\r\n        await this.loadBlockchainData();\r\n    }\r\n\r\n    loadWeb3 = async () => {\r\n        if (window.ethereum) {\r\n          window.web3 = new Web3(window.ethereum);\r\n          await window.ethereum.enable();\r\n        } else if (window.web3) {\r\n          window.web3 = new Web3(window.web3.currentProvider);\r\n        } else {\r\n          window.alert(\r\n            \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n          );\r\n        }\r\n    }\r\n\r\n    loadBlockchainData = async () => {\r\n\r\n        this.setState({\r\n            loading: false\r\n        })\r\n\r\n        const maticProvider = new WalletConnectProvider({\r\n          host: config.l2.MATIC_RPC,\r\n          callbacks: {\r\n            onConnect: console.log(\"matic connected\"),\r\n            onDisconnect: console.log(\"matic disconnected!\"),\r\n          },\r\n        });\r\n    \r\n        const ethereumProvider = new WalletConnectProvider({\r\n          host: config.l2.ETHEREUM_RPC,\r\n          callbacks: {\r\n            onConnect: console.log(\"mainchain connected\"),\r\n            onDisconnect: console.log(\"mainchain disconnected\"),\r\n          },\r\n        });\r\n        \r\n        this.setState({\r\n            maticProvider: maticProvider,\r\n            ethereumProvider: ethereumProvider\r\n        })\r\n\r\n        const web3 = window.web3;\r\n    \r\n        const accounts = await web3.eth.getAccounts();\r\n        this.setState({account: accounts[0]});\r\n\r\n        const networkId = await web3.eth.net.getId();\r\n        this.setState({networkId: networkId});\r\n    \r\n        if (networkId === config.l2.ETHEREUM_CHAINID) {\r\n            this.setState({loading: false});\r\n        } else if (networkId === config.l2.MATIC_CHAINID) {\r\n            this.setState({loading: false});\r\n        } else {\r\n          window.alert(\" switch to  Matic or Ethereum network\");\r\n        }\r\n    }\r\n\r\n    depositEther = async () => {\r\n        const maticPoSClient = this.posClientParent();\r\n        const x = this.state.inputValue * 1000000000000000000; // 18 decimals\r\n        const x1 = x.toString();\r\n    \r\n        await maticPoSClient.depositEtherForUser(this.state.account, x1, {\r\n          from: this.state.account,\r\n        });\r\n    }\r\n\r\n    burnEther = async () => {\r\n        const maticPoSClient = posClientChild();\r\n        const x = this.state.inputValue * 1000000000000000000;\r\n        const x1 = x.toString();\r\n        await maticPoSClient\r\n          .burnERC20(config.l2.posWETH, x1, {\r\n            from: this.state.account,\r\n          })\r\n          .then((res) => {\r\n            console.log(res.transactionHash);\r\n            this.setState({transactionHash: res.transactionHash});\r\n          });\r\n    }\r\n\r\n    exitEther = async () => {\r\n        const maticPoSClient = posClientParent();\r\n        await maticPoSClient\r\n          .exitERC20(this.state.inputValue, {\r\n            from: this.state.account,\r\n          })\r\n          .then((res) => {\r\n            console.log(\"exit o/p\", res);\r\n          });\r\n    }\r\n\r\n    // POS ERC20 functionality\r\n\r\n    depositERC20 = async () => {\r\n        const maticPoSClient = posClientParent();\r\n        const x = this.state.inputValue * 1000000000000000000; // 18 decimals\r\n        const x1 = x.toString();\r\n        await maticPoSClient.approveERC20ForDeposit(config.l2.posRootERC20, x1, {\r\n            from: this.state.account,\r\n        });\r\n        await maticPoSClient.depositERC20ForUser(config.l2.posRootERC20, this.state.account, x1, {\r\n            from: this.state.account,\r\n        });\r\n    };\r\n\r\n    burnERC20 = async () => {\r\n        const maticPoSClient = posClientChild();\r\n        const x = this.state.inputValue * 1000000000000000000;\r\n        const x1 = x.toString();\r\n        await maticPoSClient\r\n        .burnERC20(config.l2.posChildERC20, x1, {\r\n            from: this.state.account,\r\n        })\r\n        .then((res) => {\r\n            this.setState({transactionHash: res.transactionHash});\r\n        });\r\n    }\r\n\r\n    exitERC20 = async () => {\r\n        const maticPoSClient = posClientParent();\r\n        await maticPoSClient\r\n        .exitERC20(this.state.inputValue, {\r\n            from: this.state.account,\r\n        })\r\n        .then((res) => {\r\n            console.log(\"exit o/p\", res);\r\n        });\r\n    }\r\n\r\n    onchange = (e) => {\r\n        this.setState({inputValue: e.target.value});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div\r\n            id=\"Ether\"\r\n            >\r\n            <button\r\n              onClick={this.depositEther}\r\n              disabled={\r\n                this.state.Networkid !== 0 && this.state.Networkid === config.l2.MATIC_CHAINID\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              Deposit\r\n            </button>\r\n\r\n            <button\r\n              onClick={this.burnEther}\r\n              disabled={\r\n                this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              burn\r\n            </button>\r\n\r\n            <button\r\n              onClick={this.exitEther}\r\n              disabled={\r\n                this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID\r\n                  ? false\r\n                  : true\r\n              }\r\n            >\r\n              exit\r\n            </button>\r\n\r\n            <br />\r\n            <input\r\n              id=\"inputValue\"\r\n              type=\"text\"\r\n              placeholder=\"value\"\r\n              name=\"inputValue\"\r\n              value={this.state.inputValue}\r\n              onChange={this.onchange}\r\n              required\r\n            />\r\n            <p id=\"burnHash\">{this.state.burnHash}</p>\r\n          </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default L2View;"]},"metadata":{},"sourceType":"module"}