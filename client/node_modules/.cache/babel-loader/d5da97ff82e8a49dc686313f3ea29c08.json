{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SaveChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SaveChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SaveChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SaveChildrenV2.0\\\\client\\\\src\\\\App.js\";\nimport React, { Fragment, useState, useEffect, Component } from 'react';\nimport logo from \"./logo.svg\";\nimport Web3 from 'web3';\nimport SupportChildren from \"./abis/SupportChildren.json\";\nimport './App.css';\nimport InputCampaign from './components/InputCampaign';\nimport ListCampaign from './components/ListCampaign';\n\nfunction App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      contract = _useState2[0],\n      setContract = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      account = _useState4[0],\n      setAccount = _useState4[1];\n\n  var componentWillMount = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return loadWeb3();\n\n            case 2:\n              _context.next = 4;\n              return loadBlockchainData();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function componentWillMount() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var loadWeb3 = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context2.next = 6;\n                break;\n              }\n\n              window.web3 = new Web3(window.ethereum);\n              _context2.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context2.next = 7;\n              break;\n\n            case 6:\n              if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n              } else {\n                window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n              }\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadWeb3() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var loadBlockchainData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var web3, accountWeb3, networkId, networkData, abi, address, contractWeb3;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              web3 = window.web3; // Load account\n\n              _context3.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accountWeb3 = _context3.sent;\n              _context3.next = 6;\n              return web3.eth.net.getId();\n\n            case 6:\n              networkId = _context3.sent;\n              _context3.next = 9;\n              return SupportChildren.networks[4];\n\n            case 9:\n              networkData = _context3.sent;\n\n              if (networkData) {\n                abi = SupportChildren.abi;\n                address = networkData.address;\n                contractWeb3 = new web3.eth.Contract(abi, address);\n              } else {\n                window.alert('Smart contract not deployed to detected network');\n              }\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function loadBlockchainData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var kita = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(contractWeb3, accountWeb3) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setContract(contractWeb3);\n              setAccount(accountWeb3);\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function kita(_x, _x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    componentWillMount();\n    kita();\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputCampaign, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListCampaign, {\n    contract: contract,\n    account: account,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Luka/Desktop/SaveChildrenV2.0/client/src/App.js"],"names":["React","Fragment","useState","useEffect","Component","Web3","SupportChildren","InputCampaign","ListCampaign","App","contract","setContract","account","setAccount","componentWillMount","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accountWeb3","net","getId","networkId","networks","networkData","abi","address","contractWeb3","Contract","kita"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useEffect, Component} from 'react';\nimport logo from './logo.svg';\nimport Web3 from 'web3';\nimport SupportChildren from \"./abis/SupportChildren.json\";\nimport './App.css';\n\nimport InputCampaign from './components/InputCampaign';\nimport ListCampaign from './components/ListCampaign';\n\nfunction App(){\n\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState('');\n\n  const componentWillMount = async () => {\n    await loadWeb3();\n    await loadBlockchainData();\n  } \n\n  const loadWeb3 = async () => {\n    if(window.ethereum){\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }else if(window.web3){\n      window.web3 = new Web3(window.web3.currentProvider)\n    }else{\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  const loadBlockchainData = async () => {\n    const web3 = window.web3\n    // Load account\n    const accountWeb3 = await web3.eth.getAccounts()\n\n    const networkId = await web3.eth.net.getId()\n    const networkData = await SupportChildren.networks[4]\n    if(networkData) {\n        const abi = SupportChildren.abi\n        const address = networkData.address\n        const contractWeb3 = new web3.eth.Contract(abi, address)\n\n    } else {\n        window.alert('Smart contract not deployed to detected network')\n    }\n  }\n\n  const kita = async (contractWeb3, accountWeb3) => {\n    setContract(contractWeb3);\n    setAccount(accountWeb3);\n  }\n\n  useEffect(() => {\n    \n    componentWillMount();\n    kita();\n\n  },[])\n\n  \n\n    return (\n      <Fragment>\n        <div className = \"container\">\n          <InputCampaign/>\n          <ListCampaign contract = {contract} account = {account}/>\n        </div>\n      </Fragment>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}