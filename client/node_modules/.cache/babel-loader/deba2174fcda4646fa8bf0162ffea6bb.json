{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\src\\\\components\\\\L2View.js\";\nimport React, { Fragment, Component } from 'react';\nimport Web3 from 'web3';\nimport { MaticPOSClient } from '@maticnetwork/maticjs';\nimport WalletConnectProvider from \"@maticnetwork/walletconnect-provider\";\nimport checkDepositStatus from '../depositCheck';\n\nvar MaticPoSClient = require(\"@maticnetwork/maticjs\").MaticPOSClient;\n\nvar Network = require(\"@maticnetwork/meta/network\");\n\nvar Matic = require(\"@maticnetwork/maticjs\");\n\nvar config = require(\"../config\");\n\nvar L2View = /*#__PURE__*/function (_Component) {\n  _inherits(L2View, _Component);\n\n  function L2View(props) {\n    var _this;\n\n    _classCallCheck(this, L2View);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(L2View).call(this, props));\n    _this.state = {\n      Networkid: 0,\n      account: \"\",\n      inputValue: \"\",\n      burnHash: \"\",\n      loading: true,\n      maticProvider: null,\n      ethereumProvider: null\n    };\n    return _this;\n  }\n\n  _createClass(L2View, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$utilsPoly$getM, matic, network, _utils$getAccount, from, token, amount;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return utilsPoly.getMaticClient();\n\n              case 2:\n                _yield$utilsPoly$getM = _context.sent;\n                matic = _yield$utilsPoly$getM.matic;\n                network = _yield$utilsPoly$getM.network;\n                _utils$getAccount = utils.getAccount(), from = _utils$getAccount.from;\n                token = network.Main.Contracts.Tokens.MaticWeth;\n                amount = matic.web3Client.web3.utils.toWei('1.567'); // deposit\n\n                _context.next = 10;\n                return matic.depositEther(token, from, amount).then(function (res) {\n                  console.log(\"deposit hash: \", res.transactionHash);\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function execute() {\n        return _execute.apply(this, arguments);\n      }\n\n      return execute;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"Ether\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.depositEther,\n        disabled: this.state.Networkid !== 0 && this.state.Networkid === config.l2.MATIC_CHAINID ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, \"Deposit\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.burnEther,\n        disabled: this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, \"burn\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.exitEther,\n        disabled: this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, \"exit\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"inputValue\",\n        type: \"text\",\n        placeholder: \"value\",\n        name: \"inputValue\",\n        value: this.state.inputValue,\n        onChange: this.onchange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        id: \"burnHash\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, this.state.burnHash), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.execute,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return L2View;\n}(Component);\n\nexport default L2View;","map":{"version":3,"sources":["C:/Users/Luka/Desktop/SupportChildrenV2.0/client/src/components/L2View.js"],"names":["React","Fragment","Component","Web3","MaticPOSClient","WalletConnectProvider","checkDepositStatus","MaticPoSClient","require","Network","Matic","config","L2View","props","state","Networkid","account","inputValue","burnHash","loading","maticProvider","ethereumProvider","utilsPoly","getMaticClient","matic","network","utils","getAccount","from","token","Main","Contracts","Tokens","MaticWeth","amount","web3Client","web3","toWei","depositEther","then","res","console","log","transactionHash","l2","MATIC_CHAINID","burnEther","ETHEREUM_CHAINID","exitEther","onchange","execute"],"mappings":"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","sourcesContent":["import React, {Fragment, Component} from 'react';\r\nimport Web3 from 'web3';\r\nimport { MaticPOSClient } from '@maticnetwork/maticjs'\r\nimport WalletConnectProvider from \"@maticnetwork/walletconnect-provider\";\r\nimport checkDepositStatus from '../depositCheck';\r\n\r\nconst MaticPoSClient = require(\"@maticnetwork/maticjs\").MaticPOSClient;\r\nconst Network = require(\"@maticnetwork/meta/network\");\r\nconst Matic = require(\"@maticnetwork/maticjs\");\r\n\r\n\r\nconst config = require(\"../config\");\r\n\r\n\r\nclass L2View extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Networkid: 0,\r\n            account: \"\",\r\n            inputValue: \"\",\r\n            burnHash: \"\",\r\n            loading: true,\r\n            maticProvider: null,\r\n            ethereumProvider: null, \r\n\r\n        }\r\n    }\r\n\r\n    async execute() {\r\n      const { matic, network } = await utilsPoly.getMaticClient()\r\n      const { from } = utils.getAccount()\r\n    \r\n      const token = network.Main.Contracts.Tokens.MaticWeth\r\n      const amount = matic.web3Client.web3.utils.toWei('1.567')\r\n    \r\n      // deposit\r\n      await matic.depositEther(token, from, amount).then((res) => {\r\n            console.log(\"deposit hash: \", res.transactionHash)\r\n      })\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div\r\n            id=\"Ether\"\r\n            >\r\n            <button\r\n              onClick={this.depositEther}\r\n              disabled={\r\n                this.state.Networkid !== 0 && this.state.Networkid === config.l2.MATIC_CHAINID\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              Deposit\r\n            </button>\r\n\r\n            <button\r\n              onClick={this.burnEther}\r\n              disabled={\r\n                this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              burn\r\n            </button>\r\n\r\n            <button\r\n              onClick={this.exitEther}\r\n              disabled={\r\n                this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID\r\n                  ? false\r\n                  : true\r\n              }\r\n            >\r\n              exit\r\n            </button>\r\n\r\n            <br />\r\n            <input\r\n              id=\"inputValue\"\r\n              type=\"text\"\r\n              placeholder=\"value\"\r\n              name=\"inputValue\"\r\n              value={this.state.inputValue}\r\n              onChange={this.onchange}\r\n              required\r\n            />\r\n            <p id=\"burnHash\">{this.state.burnHash}</p>\r\n            <button onClick = {this.execute}></button>\r\n          </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default L2View;"]},"metadata":{},"sourceType":"module"}