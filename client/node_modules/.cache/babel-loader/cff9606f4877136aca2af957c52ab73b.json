{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\src\\\\components\\\\DonationView.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport Web3 from 'web3';\nimport SupportChildren from \"../abis/SupportChildren.json\";\nimport IERC20 from '../abis/IERC20.json';\nimport NFT from '../abis/NFT.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.donate = function (evt) {\n      if (_this.state.currency == \"eth\") {\n        _this.donateETH(evt);\n      } else {\n        _this.donateERC(evt);\n      }\n    };\n\n    _this.donateERC = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(evt) {\n        var web3, _token, abi, tokenContract;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                evt.preventDefault();\n                web3 = window.web3;\n\n                if (!(parseFloat(_this.state.campaign.camp_raised) + parseFloat(_this.state.amount) > parseFloat(_this.state.campaign.camp_goal))) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                alert(\"The campaign limit is \".concat(_this.state.campaign.camp_goal));\n                return _context4.abrupt(\"return\");\n\n              case 5:\n                _token = '';\n                _context4.t0 = _this.state.currency;\n                _context4.next = _context4.t0 === 'dai' ? 9 : _context4.t0 === 'enj' ? 11 : 13;\n                break;\n\n              case 9:\n                _token = _this.state.dai;\n                return _context4.abrupt(\"break\", 13);\n\n              case 11:\n                _token = _this.state.enj;\n                return _context4.abrupt(\"break\", 13);\n\n              case 13:\n                abi = IERC20.abi;\n                tokenContract = new web3.eth.Contract(abi, _token);\n                _context4.next = 17;\n                return tokenContract.methods.approve(_this.state.contractAddress, String(_this.state.amount * Math.pow(10, 18))).send({\n                  from: _this.state.account\n                }).then(function () {\n                  //uint _campaignId, address _token, uint _amount, string memory _mail\n                  _this.state.contract.methods.donateERC(parseInt(_this.state.campaign.camp_id) - 1, _token, String(_this.state.amount * Math.pow(10, 18)), _this.state.email).send({\n                    from: _this.state.account\n                  }).once('receipt', function (receipt) {\n                    _this.setState({\n                      receipt: receipt\n                    });\n                  }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    var body, response, lastItem;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.prev = 0;\n                            body = {\n                              raised: _this.state.campaign.camp_raised + parseFloat(_this.state.amount)\n                            };\n                            _context.next = 4;\n                            return fetch(\"http://localhost:5000/campaigns/\".concat(_this.state.campaign.camp_id), {\n                              method: \"PUT\",\n                              headers: {\n                                \"Content-Type\": \"application/json\"\n                              },\n                              body: JSON.stringify(body)\n                            });\n\n                          case 4:\n                            response = _context.sent;\n                            lastItem = window.location.pathname.split(\"/\").pop(); // window.location = \"/campaign/\" + this.state.campaign.camp_id;\n\n                            _context.next = 11;\n                            break;\n\n                          case 8:\n                            _context.prev = 8;\n                            _context.t0 = _context[\"catch\"](0);\n                            console.log(_context.t0.message);\n\n                          case 11:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, null, [[0, 8]]);\n                  }))).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                    var body, response;\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (!(parseFloat(_this.state.campaign.camp_raised) + parseFloat(_this.state.amount) == parseFloat(_this.state.campaign.camp_goal))) {\n                              _context2.next = 11;\n                              break;\n                            }\n\n                            _context2.prev = 1;\n                            body = {\n                              isFinished: Boolean(true)\n                            };\n                            _context2.next = 5;\n                            return fetch(\"http://localhost:5000/campaigns/\".concat(_this.state.campaign.camp_id, \"/finish\"), {\n                              method: \"PUT\",\n                              headers: {\n                                \"Content-Type\": \"application/json\"\n                              },\n                              body: JSON.stringify(body)\n                            });\n\n                          case 5:\n                            response = _context2.sent;\n                            _context2.next = 11;\n                            break;\n\n                          case 8:\n                            _context2.prev = 8;\n                            _context2.t0 = _context2[\"catch\"](1);\n                            console.log(_context2.t0.message);\n\n                          case 11:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2, null, [[1, 8]]);\n                  })));\n                }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                  var networkId, networkData, _abi, address, nft;\n\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.next = 2;\n                          return web3.eth.net.getId();\n\n                        case 2:\n                          networkId = _context3.sent;\n                          networkData = NFT.networks[networkId];\n\n                          if (networkData) {\n                            _abi = NFT.abi;\n                            address = networkData.address;\n                            nft = new web3.eth.Contract(_abi, address);\n                            nft.methods.mint(_this.state.receipt, _this.state.account).send({\n                              from: _this.state.account\n                            });\n                          }\n\n                        case 5:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                })));\n\n              case 17:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.donateETH = function (evt) {\n      evt.preventDefault();\n\n      if (parseFloat(_this.state.campaign.camp_raised) + parseFloat(_this.state.amount) > parseFloat(_this.state.campaign.camp_goal)) {\n        alert(\"The campaign limit is \".concat(_this.state.campaign.camp_goal));\n        return;\n      }\n\n      var web3 = window.web3;\n\n      _this.state.contract.methods.donateETH(parseInt(_this.state.campaign.camp_id) - 1, _this.state.email).send({\n        from: _this.state.account,\n        value: parseFloat(_this.state.amount) * Math.pow(10, 18)\n      }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var body, response, lastItem;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                body = {\n                  raised: _this.state.campaign.camp_raised + parseFloat(_this.state.amount)\n                };\n                _context5.next = 4;\n                return fetch(\"http://localhost:5000/campaigns/\".concat(_this.state.campaign.camp_id), {\n                  method: \"PUT\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify(body)\n                });\n\n              case 4:\n                response = _context5.sent;\n                lastItem = window.location.pathname.split(\"/\").pop(); // window.location = \"/campaign/\" + this.state.campaign.camp_id;\n\n                _context5.next = 11;\n                break;\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.log(_context5.t0.message);\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 8]]);\n      }))).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var body, response;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                console.log(\"usao sam\");\n\n                if (!(parseFloat(_this.state.campaign.camp_raised) + parseFloat(_this.state.amount) == parseFloat(_this.state.campaign.camp_goal))) {\n                  _context6.next = 12;\n                  break;\n                }\n\n                _context6.prev = 2;\n                body = {\n                  isFinished: Boolean(true)\n                };\n                _context6.next = 6;\n                return fetch(\"http://localhost:5000/campaigns/\".concat(_this.state.campaign.camp_id, \"/finish\"), {\n                  method: \"PUT\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify(body)\n                });\n\n              case 6:\n                response = _context6.sent;\n                _context6.next = 12;\n                break;\n\n              case 9:\n                _context6.prev = 9;\n                _context6.t0 = _context6[\"catch\"](2);\n                console.log(_context6.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[2, 9]]);\n      }))).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var networkId, networkData, abi, address, nft;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return web3.eth.net.getId();\n\n              case 2:\n                networkId = _context7.sent;\n                networkData = NFT.networks[networkId];\n\n                if (networkData) {\n                  abi = NFT.abi;\n                  address = networkData.address;\n                  nft = new web3.eth.Contract(abi, address);\n                  nft.methods.mint(_this.state.receipt, _this.state.account).send({\n                    from: \"0x2B44f59c4674dbad478e65961a586Dd98c439BD4\"\n                  });\n                }\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      })));\n    };\n\n    _this.state = {\n      contract: null,\n      contractAddress: '',\n      account: '',\n      campaign: '',\n      campaignBC: '',\n      amount: '',\n      email: '',\n      currency: 'eth',\n      path: '',\n      dai: '0x5592ec0cfb4dbc12d3ab100b257153436a1f0fea',\n      enj: '0xd7cf37924617bce1569fe6b33414f6b2514aabd0',\n      receipt: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.getCampaign();\n\n              case 2:\n                _context8.next = 4;\n                return this.loadWeb3();\n\n              case 4:\n                _context8.next = 6;\n                return this.loadBlockchainData();\n\n              case 6:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context9.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context9.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context9.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var web3, accountWeb3, addressField, networkId, networkData, abi, address, contractWeb3, camp;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                web3 = window.web3; // Load accoun\n\n                _context10.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accountWeb3 = _context10.sent;\n                this.setState({\n                  account: accountWeb3[0]\n                });\n                console.log(accountWeb3[0]);\n                addressField = document.getElementById(\"address\");\n                addressField.innerHTML = accountWeb3[0];\n                _context10.next = 10;\n                return web3.eth.net.getId();\n\n              case 10:\n                networkId = _context10.sent;\n                _context10.next = 13;\n                return SupportChildren.networks[networkId];\n\n              case 13:\n                networkData = _context10.sent;\n\n                if (!networkData) {\n                  _context10.next = 26;\n                  break;\n                }\n\n                abi = SupportChildren.abi;\n                address = networkData.address;\n                contractWeb3 = new web3.eth.Contract(abi, address);\n                _context10.next = 20;\n                return contractWeb3.methods.campaigns(parseInt(this.state.campaign.camp_id) - 1).call();\n\n              case 20:\n                camp = _context10.sent;\n                console.log(\"network\");\n                console.log(contractWeb3);\n                this.setState({\n                  contract: contractWeb3,\n                  contractAddress: address,\n                  campaignBC: camp\n                });\n                _context10.next = 27;\n                break;\n\n              case 26:\n                window.alert('Smart contract not deployed to detected network');\n\n              case 27:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"getCampaign\",\n    value: function () {\n      var _getCampaign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var lastItem, response, jsonData;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.prev = 0;\n                lastItem = window.location.pathname.split(\"/\").pop();\n                _context11.next = 4;\n                return fetch(\"http://localhost:5000/campaigns/\" + lastItem);\n\n              case 4:\n                response = _context11.sent;\n                _context11.next = 7;\n                return response.json();\n\n              case 7:\n                jsonData = _context11.sent;\n                this.setState({\n                  campaign: jsonData,\n                  path: '/campaign-donation/' + jsonData.camp_id\n                });\n                _context11.next = 14;\n                break;\n\n              case 11:\n                _context11.prev = 11;\n                _context11.t0 = _context11[\"catch\"](0);\n                console.log(_context11.t0.message);\n\n              case 14:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this, [[0, 11]]);\n      }));\n\n      function getCampaign() {\n        return _getCampaign.apply(this, arguments);\n      }\n\n      return getCampaign;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alloncenter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fundinfotext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }\n      }, \"FUNDRAISING INFORMATION\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"image15\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: this.state.campaign.camp_url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"thankyou\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }\n      }, \"THANK YOU FOR DONATING:\"), /*#__PURE__*/React.createElement(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }, this.state.campaign.camp_title)))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"enterText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }\n      }, \"ENTER AMOUNT\")), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }\n      }, \"Enter the amount you wnat to donate\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cryptolist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"inputform\",\n        placeholder: \"ENTER AMOUNT\",\n        type: \"number\",\n        step: \"0.00000001\",\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            amount: evt.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        placeholder: \"ENTER EMAIL\",\n        className: \"inputform\",\n        style: {\n          width: '200px',\n          marginLeft: '15px'\n        },\n        type: \"text\",\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            email: evt.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"listofitems\",\n        style: {\n          float: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        style: {\n          borderStyle: 'none',\n          fontSize: '30px',\n          fontFamily: 'Bebas Neue',\n          width: '80px',\n          marginRight: '50px',\n          marginTop: '-50px'\n        },\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            currency: evt.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"eth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }\n      }, \"ETH\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"dai\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }\n      }, \"DAI\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"enj\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }\n      }, \"ENJ\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"sand\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }\n      }, \"SAND\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"ant\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 17\n        }\n      }, \"ANT\")))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"buttonFundCamp\",\n        type: \"button\",\n        onClick: function onClick(evt) {\n          return _this2.donate(evt);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 17\n        }\n      }, \"Donate Now\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"claimnft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 16\n        }\n      }, \"DONATE AND CLAIM YOUR UNIQE NFT!\"))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Luka/Desktop/SupportChildrenV2.0/client/src/components/DonationView.js"],"names":["React","Component","Web3","SupportChildren","IERC20","NFT","App","props","donate","evt","state","currency","donateETH","donateERC","preventDefault","web3","window","parseFloat","campaign","camp_raised","amount","camp_goal","alert","_token","dai","enj","abi","tokenContract","eth","Contract","methods","approve","contractAddress","String","send","from","account","then","contract","parseInt","camp_id","email","once","receipt","setState","body","raised","fetch","method","headers","JSON","stringify","response","lastItem","location","pathname","split","pop","console","log","message","isFinished","Boolean","net","getId","networkId","networkData","networks","address","nft","mint","value","campaignBC","path","getCampaign","loadWeb3","loadBlockchainData","ethereum","enable","currentProvider","getAccounts","accountWeb3","addressField","document","getElementById","innerHTML","contractWeb3","campaigns","call","camp","json","jsonData","camp_url","camp_title","fontSize","target","width","marginLeft","float","borderStyle","fontFamily","marginRight","marginTop"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\r\nimport '../App.css';\r\nimport Web3 from 'web3';\r\nimport SupportChildren from \"../abis/SupportChildren.json\";\r\nimport IERC20 from '../abis/IERC20.json';\r\nimport NFT from '../abis/NFT.json';\r\n\r\n\r\nclass App extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n          contract: null,\r\n          contractAddress: '',\r\n          account: '',\r\n          campaign: '',\r\n          campaignBC: '',\r\n          amount: '',\r\n          email: '',\r\n          currency: 'eth',\r\n          path: '',\r\n          dai: '0x5592ec0cfb4dbc12d3ab100b257153436a1f0fea',\r\n          enj: '0xd7cf37924617bce1569fe6b33414f6b2514aabd0',\r\n          receipt: ''\r\n        }\r\n      }\r\n    \r\n      async componentWillMount() {\r\n        await this.getCampaign();\r\n        await this.loadWeb3();\r\n        await this.loadBlockchainData();\r\n      } \r\n    \r\n      async loadWeb3(){\r\n        if(window.ethereum){\r\n          window.web3 = new Web3(window.ethereum)\r\n          await window.ethereum.enable()\r\n        }else if(window.web3){\r\n          window.web3 = new Web3(window.web3.currentProvider)\r\n        }else{\r\n          window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n        }\r\n      }\r\n    \r\n      async loadBlockchainData() {\r\n        const web3 = window.web3\r\n        // Load accoun\r\n        const accountWeb3 = await web3.eth.getAccounts()\r\n        this.setState({account: accountWeb3[0]})\r\n\r\n        console.log(accountWeb3[0])\r\n\r\n        const addressField = document.getElementById(\"address\")\r\n        addressField.innerHTML = accountWeb3[0]\r\n    \r\n        const networkId = await web3.eth.net.getId()\r\n        const networkData = await SupportChildren.networks[networkId]\r\n        if(networkData) {\r\n            const abi = SupportChildren.abi\r\n            const address = networkData.address\r\n            const contractWeb3 = new web3.eth.Contract(abi, address)\r\n    \r\n            const camp = await contractWeb3.methods.campaigns(parseInt(this.state.campaign.camp_id)-1).call()\r\n            console.log(\"network\")\r\n            console.log(contractWeb3)\r\n\r\n            this.setState({\r\n              contract: contractWeb3,\r\n              contractAddress: address,\r\n              campaignBC: camp\r\n            })\r\n    \r\n        } else {\r\n            window.alert('Smart contract not deployed to detected network')\r\n        }\r\n      }\r\n\r\n      async getCampaign () {\r\n        try {\r\n            const lastItem = window.location.pathname.split(\"/\").pop()\r\n            const response = await fetch(\"http://localhost:5000/campaigns/\" + lastItem)\r\n            const jsonData = await response.json()\r\n\r\n            this.setState({\r\n                campaign: jsonData,\r\n                path: '/campaign-donation/' + jsonData.camp_id\r\n            })\r\n\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\n    donate = (evt) => {\r\n        if(this.state.currency == \"eth\"){\r\n            this.donateETH(evt)\r\n        }else{\r\n            this.donateERC(evt)\r\n        }\r\n    }\r\n\r\n    donateERC = async (evt) =>{\r\n        evt.preventDefault()\r\n        const web3 = window.web3\r\n\r\n        if(parseFloat(this.state.campaign.camp_raised) + parseFloat(this.state.amount) > parseFloat(this.state.campaign.camp_goal)){\r\n            alert(`The campaign limit is ${this.state.campaign.camp_goal}`)\r\n            return;\r\n        }\r\n        var _token = '';\r\n        switch (this.state.currency) {\r\n            case 'dai':\r\n                _token = this.state.dai;\r\n                break;\r\n            case 'enj':\r\n                _token = this.state.enj;\r\n                break;\r\n        }\r\n\r\n        const abi = IERC20.abi\r\n\r\n        const tokenContract = new web3.eth.Contract(abi, _token)\r\n\r\n        await tokenContract.methods.approve(this.state.contractAddress, String(this.state.amount*(10**18))).send({from: this.state.account})\r\n        .then(() =>{\r\n                //uint _campaignId, address _token, uint _amount, string memory _mail\r\n            this.state.contract.methods.donateERC(parseInt(this.state.campaign.camp_id)-1, _token, String((this.state.amount)*(10**18)),this.state.email)\r\n            .send({from: this.state.account}).once('receipt', (receipt) => {\r\n                this.setState({\r\n                  receipt: receipt\r\n                })\r\n            })\r\n            .then(async () =>{\r\n                try {\r\n                    const body = {raised : (this.state.campaign.camp_raised + parseFloat(this.state.amount))};\r\n                    const response = await fetch(`http://localhost:5000/campaigns/${this.state.campaign.camp_id}`, {\r\n                        method: \"PUT\",\r\n                        headers: {\"Content-Type\" : \"application/json\"},\r\n                        body: JSON.stringify(body)\r\n                    });\r\n                    const lastItem = window.location.pathname.split(\"/\").pop()\r\n                    // window.location = \"/campaign/\" + this.state.campaign.camp_id;\r\n                } catch (err) {\r\n                    console.log(err.message);\r\n                }\r\n            }).then(async () => {\r\n            if(parseFloat(this.state.campaign.camp_raised) + parseFloat(this.state.amount) == parseFloat(this.state.campaign.camp_goal)){\r\n                try {\r\n                const body = {isFinished: Boolean(true)}\r\n                const response = await fetch(`http://localhost:5000/campaigns/${this.state.campaign.camp_id}/finish`, {\r\n                    method: \"PUT\",\r\n                    headers: {\"Content-Type\" : \"application/json\"},\r\n                    body: JSON.stringify(body)\r\n                });\r\n                } catch (err) {\r\n                console.log(err.message)\r\n                }\r\n            }\r\n            \r\n            })\r\n        }).then(async() =>{\r\n            const networkId = await web3.eth.net.getId();\r\n            const networkData = NFT.networks[networkId];\r\n            if(networkData){\r\n                const abi = NFT.abi;\r\n                const address = networkData.address\r\n                const nft = new web3.eth.Contract(abi, address)\r\n\r\n                nft.methods.mint(this.state.receipt, this.state.account).send({from: this.state.account\r\n            })\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    donateETH = (evt) =>{\r\n        evt.preventDefault();\r\n\r\n        if(parseFloat(this.state.campaign.camp_raised) + parseFloat(this.state.amount) > parseFloat(this.state.campaign.camp_goal)){\r\n          alert(`The campaign limit is ${this.state.campaign.camp_goal}`)\r\n          return;\r\n        }\r\n        const web3 = window.web3\r\n\r\n        this.state.contract.methods.donateETH(parseInt(this.state.campaign.camp_id)-1, this.state.email)\r\n        .send({from: this.state.account, value: parseFloat(this.state.amount)*(10**18)})\r\n        .then(async () =>{\r\n            try {\r\n                const body = {raised : (this.state.campaign.camp_raised + parseFloat(this.state.amount))};\r\n                const response = await fetch(`http://localhost:5000/campaigns/${this.state.campaign.camp_id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\"Content-Type\" : \"application/json\"},\r\n                    body: JSON.stringify(body)\r\n                });\r\n                const lastItem = window.location.pathname.split(\"/\").pop()\r\n                // window.location = \"/campaign/\" + this.state.campaign.camp_id;\r\n            } catch (err) {\r\n                console.log(err.message);\r\n            }\r\n        }).then(async () => {\r\n          console.log(\"usao sam\")\r\n          if(parseFloat(this.state.campaign.camp_raised) + parseFloat(this.state.amount) == parseFloat(this.state.campaign.camp_goal)){\r\n            try {\r\n              const body = {isFinished: Boolean(true)}\r\n              const response = await fetch(`http://localhost:5000/campaigns/${this.state.campaign.camp_id}/finish`, {\r\n                method: \"PUT\",\r\n                headers: {\"Content-Type\" : \"application/json\"},\r\n                body: JSON.stringify(body)\r\n              });\r\n            } catch (err) {\r\n              console.log(err.message)\r\n            }\r\n          }\r\n          \r\n        }).then(async() =>{\r\n            const networkId = await web3.eth.net.getId();\r\n            const networkData = NFT.networks[networkId];\r\n            if(networkData){\r\n                const abi = NFT.abi;\r\n                const address = networkData.address\r\n                const nft = new web3.eth.Contract(abi, address)\r\n\r\n                nft.methods.mint(this.state.receipt, this.state.account).send({from: \"0x2B44f59c4674dbad478e65961a586Dd98c439BD4\"\r\n            })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <div>\r\n            <div className=\"alloncenter\">\r\n            <div>\r\n            <div className=\"fundinfotext\">\r\n                <a>FUNDRAISING INFORMATION</a>\r\n            </div>\r\n            <div className=\"image15\">\r\n                <img src = {this.state.campaign.camp_url}></img>\r\n                <div className=\"thankyou\" >\r\n                <p>THANK YOU FOR DONATING:</p>\r\n                <a>{this.state.campaign.camp_title}</a>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div>\r\n            <div className=\"enterText\">\r\n            <a>ENTER AMOUNT</a>\r\n            </div>\r\n            <div style={{fontSize:'14px'}}>\r\n            <a>Enter the amount you wnat to donate</a>\r\n            </div>\r\n            <div className=\"cryptolist\">\r\n            <form>\r\n                <input className=\"inputform\" placeholder=\"ENTER AMOUNT\" type=\"number\" step = \"0.00000001\" onChange = {evt => this.setState({amount: evt.target.value})}></input>\r\n                <input placeholder= \"ENTER EMAIL\" className = \"inputform\" style = {{width: '200px', marginLeft: '15px'}} type = \"text\" onChange = {evt => this.setState({email: evt.target.value})}></input>\r\n            </form>\r\n            <div className=\"listofitems\" style={{float:'right'}}>\r\n                <select style={{borderStyle: 'none', fontSize:'30px',fontFamily: 'Bebas Neue', width: '80px', marginRight: '50px', marginTop: '-50px'}} onChange = {evt => this.setState({currency: evt.target.value})}>\r\n                <option value=\"eth\">ETH</option>\r\n                <option value=\"dai\">DAI</option>\r\n                <option value=\"enj\">ENJ</option>\r\n                <option value=\"sand\">SAND</option>\r\n                <option value=\"ant\">ANT</option>\r\n                </select>\r\n            </div>\r\n            </div>\r\n            <div>\r\n                <button className=\"buttonFundCamp\" type=\"button\" onClick={evt => this.donate(evt)}>Donate Now</button>\r\n            </div>\r\n            </div>\r\n            <div className=\"claimnft\" >\r\n            <b><center>DONATE AND CLAIM YOUR UNIQE NFT!</center></b>\r\n            </div>\r\n            <div>\r\n            <div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}