{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Luka\\\\Desktop\\\\SupportChildrenV2.0\\\\client\\\\src\\\\components\\\\L2View.js\";\nimport React, { Fragment, Component } from 'react';\nimport SupportChildren from \"../abis/SupportChildren.json\";\nimport Web3 from 'web3';\nimport { MaticPOSClient } from '@maticnetwork/maticjs';\nimport WalletConnectProvider from \"@maticnetwork/walletconnect-provider\";\n\nvar MaticPoSClient = require(\"@maticnetwork/maticjs\").MaticPOSClient;\n\nvar Network = require(\"@maticnetwork/meta/network\");\n\nvar Matic = require(\"@maticnetwork/maticjs\");\n\nvar config = require(\"../config\");\n\nvar L2View = /*#__PURE__*/function (_Component) {\n  _inherits(L2View, _Component);\n\n  function L2View(props) {\n    var _this;\n\n    _classCallCheck(this, L2View);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(L2View).call(this, props));\n    _this.depositEther = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var maticPoSClient, x, x1;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"depositEther\");\n              maticPoSClient = _this.posClientParent();\n              x = _this.state.inputValue * 1000000000000000000; // 18 decimals //TODO inputValue\n\n              x1 = x.toString();\n              _context.next = 6;\n              return maticPoSClient.depositEtherForUser(_this.state.account, x1, {\n                from: _this.state.account\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.burnEther = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var maticPoSClient, x, x1;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"burnEther\");\n              maticPoSClient = _this.posClientChild();\n              x = _this.state.inputValue * 1000000000000000000; //TODO inputValue\n\n              x1 = x.toString();\n              _context2.next = 6;\n              return maticPoSClient.burnERC20(config.l2.posWETH, x1, {\n                from: _this.state.account\n              }).then(function (res) {\n                console.log(\"Burn hash: \" + res.transactionHash);\n\n                _this.setState({\n                  burnHash: res.transactionHash\n                });\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    _this.exitEther = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var maticPoSClient;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log(\"exitEther, burnHash: \" + _this.state.burnHash);\n              maticPoSClient = _this.posClientParent();\n              _context3.next = 4;\n              return maticPoSClient.exitERC20(_this.state.inputValue, {\n                from: _this.state.account\n              }).then(function (res) {\n                console.log(\"exit o/p\", res);\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    _this.state = _defineProperty({\n      Networkid: 0,\n      account: \"\",\n      inputValue: \"\",\n      burnHash: \"\",\n      loading: true,\n      maticProvider: '',\n      ethereumProvider: ''\n    }, \"loading\", '');\n    return _this;\n  }\n\n  _createClass(L2View, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context4.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context5.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context5.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var maticProvider, ethereumProvider, web3, accountWeb3, addressField, networkId, networkData, abi, address, contractWeb3;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                //POLYGON\n                this.setState({\n                  loading: true\n                });\n                maticProvider = new WalletConnectProvider({\n                  host: config.MATIC_RPC,\n                  callbacks: {\n                    onConnect: console.log(\"matic connected\"),\n                    onDisconnect: console.log(\"matic disconnected!\")\n                  }\n                });\n                ethereumProvider = new WalletConnectProvider({\n                  host: config.ETHEREUM_RPC,\n                  callbacks: {\n                    onConnect: console.log(\"mainchain connected\"),\n                    onDisconnect: console.log(\"mainchain disconnected\")\n                  }\n                });\n                this.setState({\n                  maticProvider: maticProvider,\n                  ethereumProvider: ethereumProvider\n                }); // setMaticProvider(maticProvider);\n                // setEthereumProvider(ethereumProvider);\n                //POLYGON\n\n                web3 = window.web3;\n                this.setState({\n                  web3: web3\n                }); // Load account\n\n                _context6.next = 8;\n                return web3.eth.getAccounts();\n\n              case 8:\n                accountWeb3 = _context6.sent;\n                this.setState({\n                  account: accountWeb3[0]\n                });\n                addressField = document.getElementById(\"address\");\n                addressField.innerHTML = accountWeb3[0];\n                web3.eth.getBalance(this.state.account, function (err, result) {\n                  if (err) {\n                    console.log(err);\n                  } else {\n                    var val = document.getElementById(\"value\");\n                    var res = web3.utils.fromWei(result, \"ether\");\n                    val.innerHTML = parseFloat(res).toFixed(2) + \" ETH\";\n                  }\n                }); //POLYGON\n\n                _context6.next = 15;\n                return web3.eth.net.getId();\n\n              case 15:\n                networkId = _context6.sent;\n                this.setState({\n                  Networkid: networkId\n                });\n\n                if (networkId === config.l2.ETHEREUM_CHAINID) {\n                  this.setState({\n                    loading: false\n                  });\n                } else if (networkId === config.l2.MATIC_CHAINID) {\n                  this.setState({\n                    loading: false\n                  });\n                } else {\n                  window.alert(\" switch to  Matic or Ethereum network\");\n                } //POLYGON\n\n\n                _context6.next = 20;\n                return SupportChildren.networks[networkId];\n\n              case 20:\n                networkData = _context6.sent;\n\n                if (networkData) {\n                  abi = SupportChildren.abi;\n                  address = networkData.address;\n                  contractWeb3 = new web3.eth.Contract(abi, address);\n                  this.setState({\n                    contract: contractWeb3\n                  });\n                } else {\n                  window.alert('Smart contract not deployed to detected network');\n                }\n\n              case 22:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"posClientParent\",\n    value: function posClientParent() {\n      console.log(\"posClientParent\");\n      return new MaticPoSClient({\n        network: config.l2.NETWORK,\n        version: config.l2.VERSION,\n        maticProvider: this.state.maticProvider,\n        parentProvider: window.web3,\n        parentDefaultOptions: {\n          from: this.state.account\n        },\n        maticDefaultOptions: {\n          from: this.state.account\n        }\n      });\n    }\n  }, {\n    key: \"posClientChild\",\n    value: function posClientChild() {\n      console.log(\"posClientChild\");\n      return new MaticPoSClient({\n        network: config.l2.NETWORK,\n        version: config.l2.VERSION,\n        maticProvider: window.web3,\n        parentProvider: this.state.ethereumProvider,\n        parentDefaultOptions: {\n          from: this.state.account\n        },\n        maticDefaultOptions: {\n          from: this.state.account\n        }\n      });\n    }\n  }, {\n    key: \"onchange\",\n    value: function onchange(e) {\n      this.setState({\n        inputValue: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.depositEther,\n        disabled: this.state.Networkid !== 0 && this.state.Networkid === config.l2.MATIC_CHAINID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }\n      }, \" Deposit\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.burnEther,\n        disabled: this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 19\n        }\n      }, \" Burn \"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.exitEther,\n        disabled: !(this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 19\n        }\n      }, \" Exit \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"inputValue\",\n        type: \"text\",\n        placeholder: \"value\",\n        name: \"inputValue\",\n        value: this.state.inputValue,\n        onChange: function onChange(e) {\n          return _this2.onchange(e);\n        },\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        id: \"burnHash\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 19\n        }\n      }, this.state.burnHash), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          fontFamily: \"Bebas Neue\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }\n      }, \"SWAP ASSETS\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col depositBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }, \"Deposit assets to Polygon\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Deposit amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"select\", {\n        id: \"kripto\",\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            currency: evt.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"0x0000000000000000000000000000000000000000\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }\n      }, \"ETH\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }\n      }, \"DAI\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }\n      }, \"ENJ\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"0x3845badAde8e6dFF049820680d1F14bD3903a5d0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }\n      }, \"SAND\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"0xa117000000f279d81a1d3cc75430faa017fa5a2e\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }\n      }, \"ANT\"))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"depositL2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }\n      }, \"DEPOSIT\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col withdrawBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }\n      }, \"Withdraw assets from Polygon\"), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }\n      }, \"Burn the amount of tokens you want to withdraw\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Burn amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"select\", {\n        id: \"kripto\",\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            currency: evt.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"0x0000000000000000000000000000000000000000\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }\n      }, \"ETH\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }\n      }, \"DAI\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      }, \"ENJ\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"0x3845badAde8e6dFF049820680d1F14bD3903a5d0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }\n      }, \"SAND\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"0xa117000000f279d81a1d3cc75430faa017fa5a2e\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }\n      }, \"ANT\")), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"burnBtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 23\n        }\n      }, \"Burn\")), /*#__PURE__*/React.createElement(\"input\", {\n        placeholder: \"BURN HASH\",\n        style: {\n          marginTop: \"10px\",\n          width: \"200px\"\n        },\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }\n      })))));\n    }\n  }]);\n\n  return L2View;\n}(Component);\n\nexport default L2View;","map":{"version":3,"sources":["C:/Users/Luka/Desktop/SupportChildrenV2.0/client/src/components/L2View.js"],"names":["React","Fragment","Component","SupportChildren","Web3","MaticPOSClient","WalletConnectProvider","MaticPoSClient","require","Network","Matic","config","L2View","props","depositEther","console","log","maticPoSClient","posClientParent","x","state","inputValue","x1","toString","depositEtherForUser","account","from","burnEther","posClientChild","burnERC20","l2","posWETH","then","res","transactionHash","setState","burnHash","exitEther","exitERC20","Networkid","loading","maticProvider","ethereumProvider","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","host","MATIC_RPC","callbacks","onConnect","onDisconnect","ETHEREUM_RPC","eth","getAccounts","accountWeb3","addressField","document","getElementById","innerHTML","getBalance","err","result","val","utils","fromWei","parseFloat","toFixed","net","getId","networkId","ETHEREUM_CHAINID","MATIC_CHAINID","networks","networkData","abi","address","contractWeb3","Contract","contract","network","NETWORK","version","VERSION","parentProvider","parentDefaultOptions","maticDefaultOptions","e","target","value","onchange","fontFamily","display","evt","currency","marginTop","width"],"mappings":"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","sourcesContent":["import React, {Fragment, Component} from 'react';\r\nimport SupportChildren from \"../abis/SupportChildren.json\";\r\nimport Web3 from 'web3';\r\nimport { MaticPOSClient } from '@maticnetwork/maticjs'\r\nimport WalletConnectProvider from \"@maticnetwork/walletconnect-provider\";\r\n\r\nconst MaticPoSClient = require(\"@maticnetwork/maticjs\").MaticPOSClient;\r\nconst Network = require(\"@maticnetwork/meta/network\");\r\nconst Matic = require(\"@maticnetwork/maticjs\");\r\n\r\n\r\n\r\nconst config = require(\"../config\");\r\n\r\n\r\nclass L2View extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Networkid: 0,\r\n            account: \"\",\r\n            inputValue: \"\",\r\n            burnHash: \"\",\r\n            loading: true,\r\n            maticProvider: '',\r\n            ethereumProvider: '', \r\n            loading: ''\r\n        }\r\n    }\r\n\r\n    \r\n    async componentWillMount() {\r\n        await this.loadWeb3();\r\n        await this.loadBlockchainData();\r\n    }\r\n\r\n    async loadWeb3(){\r\n      if(window.ethereum){\r\n        window.web3 = new Web3(window.ethereum)\r\n        await window.ethereum.enable()\r\n      }else if(window.web3){\r\n        window.web3 = new Web3(window.web3.currentProvider)\r\n      }else{\r\n        window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n      }\r\n    }\r\n\r\n    async loadBlockchainData() {\r\n      //POLYGON\r\n      this.setState({loading: true})\r\n      const maticProvider = new WalletConnectProvider({\r\n          host: config.MATIC_RPC,\r\n          callbacks: {\r\n              onConnect: console.log(\"matic connected\"),\r\n              onDisconnect: console.log(\"matic disconnected!\"),\r\n          },\r\n      });\r\n\r\n      const ethereumProvider = new WalletConnectProvider({\r\n          host: config.ETHEREUM_RPC,\r\n          callbacks: {\r\n              onConnect: console.log(\"mainchain connected\"),\r\n              onDisconnect: console.log(\"mainchain disconnected\"),\r\n          },\r\n      });\r\n\r\n      this.setState({maticProvider: maticProvider, ethereumProvider: ethereumProvider})\r\n      // setMaticProvider(maticProvider);\r\n      // setEthereumProvider(ethereumProvider);\r\n\r\n      //POLYGON\r\n\r\n      const web3 = window.web3\r\n        this.setState({web3: web3})\r\n      // Load account\r\n      const accountWeb3 = await web3.eth.getAccounts()\r\n      this.setState({account: accountWeb3[0]})\r\n\r\n      const addressField = document.getElementById(\"address\")\r\n      addressField.innerHTML = accountWeb3[0]\r\n\r\n      web3.eth.getBalance(this.state.account, function(err, result) {\r\n        if (err) {\r\n          console.log(err)\r\n        } else {\r\n          const val = document.getElementById(\"value\")\r\n          var res = web3.utils.fromWei(result, \"ether\")\r\n          val.innerHTML = parseFloat(res).toFixed(2) + \" ETH\"\r\n        }\r\n      })\r\n        //POLYGON\r\n      const networkId = await web3.eth.net.getId()\r\n        this.setState({Networkid: networkId})\r\n\r\n        if (networkId === config.l2.ETHEREUM_CHAINID) {\r\n            this.setState({loading: false})\r\n        } else if (networkId === config.l2.MATIC_CHAINID) {\r\n            this.setState({loading: false})\r\n        } else {\r\n            window.alert(\" switch to  Matic or Ethereum network\");\r\n        }\r\n        //POLYGON\r\n\r\n      const networkData = await SupportChildren.networks[networkId]\r\n      if(networkData) {\r\n          const abi = SupportChildren.abi\r\n          const address = networkData.address\r\n          const contractWeb3 = new web3.eth.Contract(abi, address)\r\n\r\n          this.setState({contract: contractWeb3})\r\n\r\n      } else {\r\n          window.alert('Smart contract not deployed to detected network')\r\n      }\r\n    }\r\n\r\n    posClientParent () {\r\n      console.log(\"posClientParent\")\r\n      return new MaticPoSClient({\r\n          network: config.l2.NETWORK,\r\n          version: config.l2.VERSION,\r\n          maticProvider: this.state.maticProvider,\r\n          parentProvider: window.web3,\r\n          parentDefaultOptions: {from: this.state.account},\r\n          maticDefaultOptions: {from: this.state.account},\r\n      });\r\n    };\r\n\r\n    posClientChild (){\r\n      console.log(\"posClientChild\")\r\n      return new MaticPoSClient({\r\n          network: config.l2.NETWORK,\r\n          version: config.l2.VERSION,\r\n          maticProvider: window.web3,\r\n          parentProvider: this.state.ethereumProvider,\r\n          parentDefaultOptions: {from: this.state.account},\r\n          maticDefaultOptions: {from: this.state.account},\r\n      });\r\n    };\r\n\r\n    depositEther = async () => {\r\n      console.log(\"depositEther\")\r\n      const maticPoSClient = this.posClientParent();\r\n      const x = this.state.inputValue * 1000000000000000000; // 18 decimals //TODO inputValue\r\n      const x1 = x.toString();\r\n\r\n      await maticPoSClient.depositEtherForUser(this.state.account, x1, {\r\n          from: this.state.account,\r\n      });\r\n    };\r\n\r\n    burnEther = async () => {\r\n      console.log(\"burnEther\")\r\n      const maticPoSClient = this.posClientChild();\r\n      const x = this.state.inputValue * 1000000000000000000; //TODO inputValue\r\n      const x1 = x.toString();\r\n      await maticPoSClient\r\n          .burnERC20(config.l2.posWETH, x1, {\r\n              from: this.state.account,\r\n          })\r\n          .then((res) => {\r\n              console.log(\"Burn hash: \" + res.transactionHash);\r\n              this.setState({burnHash: res.transactionHash});\r\n          });\r\n    };\r\n\r\n    exitEther = async () => {\r\n      console.log(\"exitEther, burnHash: \" + this.state.burnHash)\r\n      const maticPoSClient = this.posClientParent();\r\n      await maticPoSClient\r\n          .exitERC20(this.state.inputValue, {\r\n              from: this.state.account,\r\n          })\r\n          .then((res) => {\r\n              console.log(\"exit o/p\", res);\r\n          });\r\n    };\r\n\r\n    onchange (e) {\r\n      this.setState({inputValue: e.target.value});\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n\r\n              {/*//POLYGON onClick={evt => this.foo(evt)}*/}\r\n                  <button onClick={this.depositEther} disabled={ this.state.Networkid !== 0 && this.state.Networkid === config.l2.MATIC_CHAINID }> Deposit</button>\r\n                  <button onClick={this.burnEther} disabled={this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID}> Burn </button>\r\n                  <button onClick={this.exitEther} disabled={ !(this.state.Networkid !== 0 && this.state.Networkid === config.l2.ETHEREUM_CHAINID)}> Exit </button>\r\n                  <br />\r\n                  <input id=\"inputValue\" type=\"text\" placeholder=\"value\" name=\"inputValue\" value={this.state.inputValue} onChange={e => this.onchange(e)} required/>\r\n                  <p id=\"burnHash\">{this.state.burnHash}</p>\r\n                  {/*//POLYGON*/}\r\n              <div className = \"container\">\r\n                <h1 style = {{fontFamily: \"Bebas Neue\"}}>SWAP ASSETS</h1>\r\n                <div className = \"row\">\r\n                  <div className = \"col depositBox\">\r\n                    <h3>Deposit assets to Polygon</h3>\r\n                    <div style = {{display: \"flex\"}}>\r\n                      <input type = \"text\" placeholder = \"Deposit amount\" />\r\n                      <select id=\"kripto\" onChange = {evt => this.setState({currency: evt.target.value})}>\r\n                        <option value=\"0x0000000000000000000000000000000000000000\">ETH</option>\r\n                        <option value=\"0x6b175474e89094c44da98b954eedeac495271d0f\">DAI</option>\r\n                        <option value=\"0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c\">ENJ</option>\r\n                        <option value=\"0x3845badAde8e6dFF049820680d1F14bD3903a5d0\">SAND</option>\r\n                        <option value=\"0xa117000000f279d81a1d3cc75430faa017fa5a2e\">ANT</option>\r\n                      </select>\r\n                    </div>\r\n                    <button className = \"depositL2\">DEPOSIT</button>\r\n                  </div>\r\n                  <div className = \"col withdrawBox\">\r\n                    <h3 >Withdraw assets from Polygon</h3>\r\n                    <h6>Burn the amount of tokens you want to withdraw</h6>\r\n                    <div style = {{display: \"flex\"}}>\r\n                      <input type = \"text\" placeholder = \"Burn amount\" />\r\n                      <select id=\"kripto\" onChange = {evt => this.setState({currency: evt.target.value})}>\r\n                        <option value=\"0x0000000000000000000000000000000000000000\">ETH</option>\r\n                        <option value=\"0x6b175474e89094c44da98b954eedeac495271d0f\">DAI</option>\r\n                        <option value=\"0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c\">ENJ</option>\r\n                        <option value=\"0x3845badAde8e6dFF049820680d1F14bD3903a5d0\">SAND</option>\r\n                        <option value=\"0xa117000000f279d81a1d3cc75430faa017fa5a2e\">ANT</option>\r\n                      </select>\r\n                      <button className = \"burnBtn\">Burn</button>\r\n                    </div>\r\n                    <input placeholder = \"BURN HASH\" style = {{marginTop: \"10px\", width: \"200px\"}} disabled/>\r\n                    <div style = {{display: \"flex\"}}>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default L2View;"]},"metadata":{},"sourceType":"module"}